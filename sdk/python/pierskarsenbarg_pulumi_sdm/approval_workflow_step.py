# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['ApprovalWorkflowStepArgs', 'ApprovalWorkflowStep']

@pulumi.input_type
class ApprovalWorkflowStepArgs:
    def __init__(__self__, *,
                 approval_flow_id: pulumi.Input[str]):
        """
        The set of arguments for constructing a ApprovalWorkflowStep resource.
        :param pulumi.Input[str] approval_flow_id: The approval flow id specified the approval workfflow that this step belongs to
        """
        pulumi.set(__self__, "approval_flow_id", approval_flow_id)

    @property
    @pulumi.getter(name="approvalFlowId")
    def approval_flow_id(self) -> pulumi.Input[str]:
        """
        The approval flow id specified the approval workfflow that this step belongs to
        """
        return pulumi.get(self, "approval_flow_id")

    @approval_flow_id.setter
    def approval_flow_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "approval_flow_id", value)


@pulumi.input_type
class _ApprovalWorkflowStepState:
    def __init__(__self__, *,
                 approval_flow_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering ApprovalWorkflowStep resources.
        :param pulumi.Input[str] approval_flow_id: The approval flow id specified the approval workfflow that this step belongs to
        """
        if approval_flow_id is not None:
            pulumi.set(__self__, "approval_flow_id", approval_flow_id)

    @property
    @pulumi.getter(name="approvalFlowId")
    def approval_flow_id(self) -> Optional[pulumi.Input[str]]:
        """
        The approval flow id specified the approval workfflow that this step belongs to
        """
        return pulumi.get(self, "approval_flow_id")

    @approval_flow_id.setter
    def approval_flow_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "approval_flow_id", value)


class ApprovalWorkflowStep(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 approval_flow_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        ApprovalWorkflowStep links an approval workflow step to an ApprovalWorkflow
        ## Example Usage

        ```python
        import pulumi
        import pierskarsenbarg_pulumi_sdm as sdm

        approval_workflow_step_example = sdm.ApprovalWorkflowStep("approvalWorkflowStepExample", approval_flow_id="af-343865")
        ```
        This resource can be imported using the import command.

        ## Import

        A ApprovalWorkflowStep can be imported using the id, e.g.,

        ```sh
        $ pulumi import sdm:index/approvalWorkflowStep:ApprovalWorkflowStep example afs-12345678
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] approval_flow_id: The approval flow id specified the approval workfflow that this step belongs to
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ApprovalWorkflowStepArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        ApprovalWorkflowStep links an approval workflow step to an ApprovalWorkflow
        ## Example Usage

        ```python
        import pulumi
        import pierskarsenbarg_pulumi_sdm as sdm

        approval_workflow_step_example = sdm.ApprovalWorkflowStep("approvalWorkflowStepExample", approval_flow_id="af-343865")
        ```
        This resource can be imported using the import command.

        ## Import

        A ApprovalWorkflowStep can be imported using the id, e.g.,

        ```sh
        $ pulumi import sdm:index/approvalWorkflowStep:ApprovalWorkflowStep example afs-12345678
        ```

        :param str resource_name: The name of the resource.
        :param ApprovalWorkflowStepArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ApprovalWorkflowStepArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 approval_flow_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ApprovalWorkflowStepArgs.__new__(ApprovalWorkflowStepArgs)

            if approval_flow_id is None and not opts.urn:
                raise TypeError("Missing required property 'approval_flow_id'")
            __props__.__dict__["approval_flow_id"] = approval_flow_id
        super(ApprovalWorkflowStep, __self__).__init__(
            'sdm:index/approvalWorkflowStep:ApprovalWorkflowStep',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            approval_flow_id: Optional[pulumi.Input[str]] = None) -> 'ApprovalWorkflowStep':
        """
        Get an existing ApprovalWorkflowStep resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] approval_flow_id: The approval flow id specified the approval workfflow that this step belongs to
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ApprovalWorkflowStepState.__new__(_ApprovalWorkflowStepState)

        __props__.__dict__["approval_flow_id"] = approval_flow_id
        return ApprovalWorkflowStep(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="approvalFlowId")
    def approval_flow_id(self) -> pulumi.Output[str]:
        """
        The approval flow id specified the approval workfflow that this step belongs to
        """
        return pulumi.get(self, "approval_flow_id")

