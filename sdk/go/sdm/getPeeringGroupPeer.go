// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdm

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-sdm/sdk/go/sdm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// PeeringGroupPeer represents the link between two PeeringGroups
func LookupPeeringGroupPeer(ctx *pulumi.Context, args *LookupPeeringGroupPeerArgs, opts ...pulumi.InvokeOption) (*LookupPeeringGroupPeerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPeeringGroupPeerResult
	err := ctx.Invoke("sdm:index/getPeeringGroupPeer:getPeeringGroupPeer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPeeringGroupPeer.
type LookupPeeringGroupPeerArgs struct {
	// Group ID from which the link will originate.
	GroupId *string `pulumi:"groupId"`
	// Unique identifier of the Attachment.
	Id *string `pulumi:"id"`
	// Peering Group ID to which Group ID will link.
	PeersWithGroupId *string `pulumi:"peersWithGroupId"`
}

// A collection of values returned by getPeeringGroupPeer.
type LookupPeeringGroupPeerResult struct {
	// Group ID from which the link will originate.
	GroupId *string `pulumi:"groupId"`
	// Unique identifier of the Attachment.
	Id *string `pulumi:"id"`
	// a list of strings of ids of data sources that match the given arguments.
	Ids []string `pulumi:"ids"`
	// A list where each element has the following attributes:
	PeeringGroupPeers []GetPeeringGroupPeerPeeringGroupPeer `pulumi:"peeringGroupPeers"`
	// Peering Group ID to which Group ID will link.
	PeersWithGroupId *string `pulumi:"peersWithGroupId"`
}

func LookupPeeringGroupPeerOutput(ctx *pulumi.Context, args LookupPeeringGroupPeerOutputArgs, opts ...pulumi.InvokeOption) LookupPeeringGroupPeerResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPeeringGroupPeerResultOutput, error) {
			args := v.(LookupPeeringGroupPeerArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sdm:index/getPeeringGroupPeer:getPeeringGroupPeer", args, LookupPeeringGroupPeerResultOutput{}, options).(LookupPeeringGroupPeerResultOutput), nil
		}).(LookupPeeringGroupPeerResultOutput)
}

// A collection of arguments for invoking getPeeringGroupPeer.
type LookupPeeringGroupPeerOutputArgs struct {
	// Group ID from which the link will originate.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// Unique identifier of the Attachment.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Peering Group ID to which Group ID will link.
	PeersWithGroupId pulumi.StringPtrInput `pulumi:"peersWithGroupId"`
}

func (LookupPeeringGroupPeerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPeeringGroupPeerArgs)(nil)).Elem()
}

// A collection of values returned by getPeeringGroupPeer.
type LookupPeeringGroupPeerResultOutput struct{ *pulumi.OutputState }

func (LookupPeeringGroupPeerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPeeringGroupPeerResult)(nil)).Elem()
}

func (o LookupPeeringGroupPeerResultOutput) ToLookupPeeringGroupPeerResultOutput() LookupPeeringGroupPeerResultOutput {
	return o
}

func (o LookupPeeringGroupPeerResultOutput) ToLookupPeeringGroupPeerResultOutputWithContext(ctx context.Context) LookupPeeringGroupPeerResultOutput {
	return o
}

// Group ID from which the link will originate.
func (o LookupPeeringGroupPeerResultOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPeeringGroupPeerResult) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// Unique identifier of the Attachment.
func (o LookupPeeringGroupPeerResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPeeringGroupPeerResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// a list of strings of ids of data sources that match the given arguments.
func (o LookupPeeringGroupPeerResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPeeringGroupPeerResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// A list where each element has the following attributes:
func (o LookupPeeringGroupPeerResultOutput) PeeringGroupPeers() GetPeeringGroupPeerPeeringGroupPeerArrayOutput {
	return o.ApplyT(func(v LookupPeeringGroupPeerResult) []GetPeeringGroupPeerPeeringGroupPeer { return v.PeeringGroupPeers }).(GetPeeringGroupPeerPeeringGroupPeerArrayOutput)
}

// Peering Group ID to which Group ID will link.
func (o LookupPeeringGroupPeerResultOutput) PeersWithGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPeeringGroupPeerResult) *string { return v.PeersWithGroupId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPeeringGroupPeerResultOutput{})
}
