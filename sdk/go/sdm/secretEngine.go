// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdm

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-sdm/sdk/go/sdm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A SecretEngine is managing secrets in SecretStores.
// This resource can be imported using the import command.
//
// ## Import
//
// A SecretEngine can be imported using the id, e.g.,
//
// ```sh
// $ pulumi import sdm:index/secretEngine:SecretEngine example eng-12345678
// ```
type SecretEngine struct {
	pulumi.CustomResourceState

	// ActiveDirectoryEngine is currently unstable, and its API may change, or it may be removed, without a major version bump.
	ActiveDirectory SecretEngineActiveDirectoryPtrOutput `pulumi:"activeDirectory"`
	// KeyValueEngine is currently unstable, and its API may change, or it may be removed, without a major version bump.
	KeyValue SecretEngineKeyValuePtrOutput `pulumi:"keyValue"`
}

// NewSecretEngine registers a new resource with the given unique name, arguments, and options.
func NewSecretEngine(ctx *pulumi.Context,
	name string, args *SecretEngineArgs, opts ...pulumi.ResourceOption) (*SecretEngine, error) {
	if args == nil {
		args = &SecretEngineArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecretEngine
	err := ctx.RegisterResource("sdm:index/secretEngine:SecretEngine", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecretEngine gets an existing SecretEngine resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecretEngine(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecretEngineState, opts ...pulumi.ResourceOption) (*SecretEngine, error) {
	var resource SecretEngine
	err := ctx.ReadResource("sdm:index/secretEngine:SecretEngine", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecretEngine resources.
type secretEngineState struct {
	// ActiveDirectoryEngine is currently unstable, and its API may change, or it may be removed, without a major version bump.
	ActiveDirectory *SecretEngineActiveDirectory `pulumi:"activeDirectory"`
	// KeyValueEngine is currently unstable, and its API may change, or it may be removed, without a major version bump.
	KeyValue *SecretEngineKeyValue `pulumi:"keyValue"`
}

type SecretEngineState struct {
	// ActiveDirectoryEngine is currently unstable, and its API may change, or it may be removed, without a major version bump.
	ActiveDirectory SecretEngineActiveDirectoryPtrInput
	// KeyValueEngine is currently unstable, and its API may change, or it may be removed, without a major version bump.
	KeyValue SecretEngineKeyValuePtrInput
}

func (SecretEngineState) ElementType() reflect.Type {
	return reflect.TypeOf((*secretEngineState)(nil)).Elem()
}

type secretEngineArgs struct {
	// ActiveDirectoryEngine is currently unstable, and its API may change, or it may be removed, without a major version bump.
	ActiveDirectory *SecretEngineActiveDirectory `pulumi:"activeDirectory"`
	// KeyValueEngine is currently unstable, and its API may change, or it may be removed, without a major version bump.
	KeyValue *SecretEngineKeyValue `pulumi:"keyValue"`
}

// The set of arguments for constructing a SecretEngine resource.
type SecretEngineArgs struct {
	// ActiveDirectoryEngine is currently unstable, and its API may change, or it may be removed, without a major version bump.
	ActiveDirectory SecretEngineActiveDirectoryPtrInput
	// KeyValueEngine is currently unstable, and its API may change, or it may be removed, without a major version bump.
	KeyValue SecretEngineKeyValuePtrInput
}

func (SecretEngineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secretEngineArgs)(nil)).Elem()
}

type SecretEngineInput interface {
	pulumi.Input

	ToSecretEngineOutput() SecretEngineOutput
	ToSecretEngineOutputWithContext(ctx context.Context) SecretEngineOutput
}

func (*SecretEngine) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretEngine)(nil)).Elem()
}

func (i *SecretEngine) ToSecretEngineOutput() SecretEngineOutput {
	return i.ToSecretEngineOutputWithContext(context.Background())
}

func (i *SecretEngine) ToSecretEngineOutputWithContext(ctx context.Context) SecretEngineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretEngineOutput)
}

// SecretEngineArrayInput is an input type that accepts SecretEngineArray and SecretEngineArrayOutput values.
// You can construct a concrete instance of `SecretEngineArrayInput` via:
//
//	SecretEngineArray{ SecretEngineArgs{...} }
type SecretEngineArrayInput interface {
	pulumi.Input

	ToSecretEngineArrayOutput() SecretEngineArrayOutput
	ToSecretEngineArrayOutputWithContext(context.Context) SecretEngineArrayOutput
}

type SecretEngineArray []SecretEngineInput

func (SecretEngineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecretEngine)(nil)).Elem()
}

func (i SecretEngineArray) ToSecretEngineArrayOutput() SecretEngineArrayOutput {
	return i.ToSecretEngineArrayOutputWithContext(context.Background())
}

func (i SecretEngineArray) ToSecretEngineArrayOutputWithContext(ctx context.Context) SecretEngineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretEngineArrayOutput)
}

// SecretEngineMapInput is an input type that accepts SecretEngineMap and SecretEngineMapOutput values.
// You can construct a concrete instance of `SecretEngineMapInput` via:
//
//	SecretEngineMap{ "key": SecretEngineArgs{...} }
type SecretEngineMapInput interface {
	pulumi.Input

	ToSecretEngineMapOutput() SecretEngineMapOutput
	ToSecretEngineMapOutputWithContext(context.Context) SecretEngineMapOutput
}

type SecretEngineMap map[string]SecretEngineInput

func (SecretEngineMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecretEngine)(nil)).Elem()
}

func (i SecretEngineMap) ToSecretEngineMapOutput() SecretEngineMapOutput {
	return i.ToSecretEngineMapOutputWithContext(context.Background())
}

func (i SecretEngineMap) ToSecretEngineMapOutputWithContext(ctx context.Context) SecretEngineMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretEngineMapOutput)
}

type SecretEngineOutput struct{ *pulumi.OutputState }

func (SecretEngineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretEngine)(nil)).Elem()
}

func (o SecretEngineOutput) ToSecretEngineOutput() SecretEngineOutput {
	return o
}

func (o SecretEngineOutput) ToSecretEngineOutputWithContext(ctx context.Context) SecretEngineOutput {
	return o
}

// ActiveDirectoryEngine is currently unstable, and its API may change, or it may be removed, without a major version bump.
func (o SecretEngineOutput) ActiveDirectory() SecretEngineActiveDirectoryPtrOutput {
	return o.ApplyT(func(v *SecretEngine) SecretEngineActiveDirectoryPtrOutput { return v.ActiveDirectory }).(SecretEngineActiveDirectoryPtrOutput)
}

// KeyValueEngine is currently unstable, and its API may change, or it may be removed, without a major version bump.
func (o SecretEngineOutput) KeyValue() SecretEngineKeyValuePtrOutput {
	return o.ApplyT(func(v *SecretEngine) SecretEngineKeyValuePtrOutput { return v.KeyValue }).(SecretEngineKeyValuePtrOutput)
}

type SecretEngineArrayOutput struct{ *pulumi.OutputState }

func (SecretEngineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecretEngine)(nil)).Elem()
}

func (o SecretEngineArrayOutput) ToSecretEngineArrayOutput() SecretEngineArrayOutput {
	return o
}

func (o SecretEngineArrayOutput) ToSecretEngineArrayOutputWithContext(ctx context.Context) SecretEngineArrayOutput {
	return o
}

func (o SecretEngineArrayOutput) Index(i pulumi.IntInput) SecretEngineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecretEngine {
		return vs[0].([]*SecretEngine)[vs[1].(int)]
	}).(SecretEngineOutput)
}

type SecretEngineMapOutput struct{ *pulumi.OutputState }

func (SecretEngineMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecretEngine)(nil)).Elem()
}

func (o SecretEngineMapOutput) ToSecretEngineMapOutput() SecretEngineMapOutput {
	return o
}

func (o SecretEngineMapOutput) ToSecretEngineMapOutputWithContext(ctx context.Context) SecretEngineMapOutput {
	return o
}

func (o SecretEngineMapOutput) MapIndex(k pulumi.StringInput) SecretEngineOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecretEngine {
		return vs[0].(map[string]*SecretEngine)[vs[1].(string)]
	}).(SecretEngineOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecretEngineInput)(nil)).Elem(), &SecretEngine{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretEngineArrayInput)(nil)).Elem(), SecretEngineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretEngineMapInput)(nil)).Elem(), SecretEngineMap{})
	pulumi.RegisterOutputType(SecretEngineOutput{})
	pulumi.RegisterOutputType(SecretEngineArrayOutput{})
	pulumi.RegisterOutputType(SecretEngineMapOutput{})
}
