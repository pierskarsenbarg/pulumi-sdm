// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdm

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// AccountGrant can be imported using the id, e.g.,
//
// ```sh
//  $ pulumi import sdm:index/accountGrant:AccountGrant example ag-12345678
// ```
type AccountGrant struct {
	pulumi.CustomResourceState

	// The account id of this AccountGrant.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// The resource id of this AccountGrant.
	ResourceId pulumi.StringOutput `pulumi:"resourceId"`
}

// NewAccountGrant registers a new resource with the given unique name, arguments, and options.
func NewAccountGrant(ctx *pulumi.Context,
	name string, args *AccountGrantArgs, opts ...pulumi.ResourceOption) (*AccountGrant, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.ResourceId == nil {
		return nil, errors.New("invalid value for required argument 'ResourceId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AccountGrant
	err := ctx.RegisterResource("sdm:index/accountGrant:AccountGrant", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountGrant gets an existing AccountGrant resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountGrant(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountGrantState, opts ...pulumi.ResourceOption) (*AccountGrant, error) {
	var resource AccountGrant
	err := ctx.ReadResource("sdm:index/accountGrant:AccountGrant", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountGrant resources.
type accountGrantState struct {
	// The account id of this AccountGrant.
	AccountId *string `pulumi:"accountId"`
	// The resource id of this AccountGrant.
	ResourceId *string `pulumi:"resourceId"`
}

type AccountGrantState struct {
	// The account id of this AccountGrant.
	AccountId pulumi.StringPtrInput
	// The resource id of this AccountGrant.
	ResourceId pulumi.StringPtrInput
}

func (AccountGrantState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountGrantState)(nil)).Elem()
}

type accountGrantArgs struct {
	// The account id of this AccountGrant.
	AccountId string `pulumi:"accountId"`
	// The resource id of this AccountGrant.
	ResourceId string `pulumi:"resourceId"`
}

// The set of arguments for constructing a AccountGrant resource.
type AccountGrantArgs struct {
	// The account id of this AccountGrant.
	AccountId pulumi.StringInput
	// The resource id of this AccountGrant.
	ResourceId pulumi.StringInput
}

func (AccountGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountGrantArgs)(nil)).Elem()
}

type AccountGrantInput interface {
	pulumi.Input

	ToAccountGrantOutput() AccountGrantOutput
	ToAccountGrantOutputWithContext(ctx context.Context) AccountGrantOutput
}

func (*AccountGrant) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountGrant)(nil)).Elem()
}

func (i *AccountGrant) ToAccountGrantOutput() AccountGrantOutput {
	return i.ToAccountGrantOutputWithContext(context.Background())
}

func (i *AccountGrant) ToAccountGrantOutputWithContext(ctx context.Context) AccountGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountGrantOutput)
}

// AccountGrantArrayInput is an input type that accepts AccountGrantArray and AccountGrantArrayOutput values.
// You can construct a concrete instance of `AccountGrantArrayInput` via:
//
//          AccountGrantArray{ AccountGrantArgs{...} }
type AccountGrantArrayInput interface {
	pulumi.Input

	ToAccountGrantArrayOutput() AccountGrantArrayOutput
	ToAccountGrantArrayOutputWithContext(context.Context) AccountGrantArrayOutput
}

type AccountGrantArray []AccountGrantInput

func (AccountGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountGrant)(nil)).Elem()
}

func (i AccountGrantArray) ToAccountGrantArrayOutput() AccountGrantArrayOutput {
	return i.ToAccountGrantArrayOutputWithContext(context.Background())
}

func (i AccountGrantArray) ToAccountGrantArrayOutputWithContext(ctx context.Context) AccountGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountGrantArrayOutput)
}

// AccountGrantMapInput is an input type that accepts AccountGrantMap and AccountGrantMapOutput values.
// You can construct a concrete instance of `AccountGrantMapInput` via:
//
//          AccountGrantMap{ "key": AccountGrantArgs{...} }
type AccountGrantMapInput interface {
	pulumi.Input

	ToAccountGrantMapOutput() AccountGrantMapOutput
	ToAccountGrantMapOutputWithContext(context.Context) AccountGrantMapOutput
}

type AccountGrantMap map[string]AccountGrantInput

func (AccountGrantMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountGrant)(nil)).Elem()
}

func (i AccountGrantMap) ToAccountGrantMapOutput() AccountGrantMapOutput {
	return i.ToAccountGrantMapOutputWithContext(context.Background())
}

func (i AccountGrantMap) ToAccountGrantMapOutputWithContext(ctx context.Context) AccountGrantMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountGrantMapOutput)
}

type AccountGrantOutput struct{ *pulumi.OutputState }

func (AccountGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountGrant)(nil)).Elem()
}

func (o AccountGrantOutput) ToAccountGrantOutput() AccountGrantOutput {
	return o
}

func (o AccountGrantOutput) ToAccountGrantOutputWithContext(ctx context.Context) AccountGrantOutput {
	return o
}

// The account id of this AccountGrant.
func (o AccountGrantOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountGrant) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// The resource id of this AccountGrant.
func (o AccountGrantOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountGrant) pulumi.StringOutput { return v.ResourceId }).(pulumi.StringOutput)
}

type AccountGrantArrayOutput struct{ *pulumi.OutputState }

func (AccountGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountGrant)(nil)).Elem()
}

func (o AccountGrantArrayOutput) ToAccountGrantArrayOutput() AccountGrantArrayOutput {
	return o
}

func (o AccountGrantArrayOutput) ToAccountGrantArrayOutputWithContext(ctx context.Context) AccountGrantArrayOutput {
	return o
}

func (o AccountGrantArrayOutput) Index(i pulumi.IntInput) AccountGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccountGrant {
		return vs[0].([]*AccountGrant)[vs[1].(int)]
	}).(AccountGrantOutput)
}

type AccountGrantMapOutput struct{ *pulumi.OutputState }

func (AccountGrantMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountGrant)(nil)).Elem()
}

func (o AccountGrantMapOutput) ToAccountGrantMapOutput() AccountGrantMapOutput {
	return o
}

func (o AccountGrantMapOutput) ToAccountGrantMapOutputWithContext(ctx context.Context) AccountGrantMapOutput {
	return o
}

func (o AccountGrantMapOutput) MapIndex(k pulumi.StringInput) AccountGrantOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccountGrant {
		return vs[0].(map[string]*AccountGrant)[vs[1].(string)]
	}).(AccountGrantOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountGrantInput)(nil)).Elem(), &AccountGrant{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountGrantArrayInput)(nil)).Elem(), AccountGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountGrantMapInput)(nil)).Elem(), AccountGrantMap{})
	pulumi.RegisterOutputType(AccountGrantOutput{})
	pulumi.RegisterOutputType(AccountGrantArrayOutput{})
	pulumi.RegisterOutputType(AccountGrantMapOutput{})
}
