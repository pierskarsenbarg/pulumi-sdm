// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pierskarsenbarg/pulumi-sdm/sdk/go/sdm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AccountAttachments assign an account to a role.
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-sdm/sdk/go/sdm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdm.NewAccountAttachment(ctx, "testAccountAttachment", &sdm.AccountAttachmentArgs{
//				AccountId: pulumi.String("a-00000054"),
//				RoleId:    pulumi.String("r-12355562"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// This resource can be imported using the import command.
//
// ## Import
//
// A AccountAttachment can be imported using the id, e.g.,
//
// ```sh
//
//	$ pulumi import sdm:index/accountAttachment:AccountAttachment example aa-12345678
//
// ```
type AccountAttachment struct {
	pulumi.CustomResourceState

	// The id of the account of this AccountAttachment.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// The id of the attached role of this AccountAttachment.
	RoleId pulumi.StringOutput `pulumi:"roleId"`
}

// NewAccountAttachment registers a new resource with the given unique name, arguments, and options.
func NewAccountAttachment(ctx *pulumi.Context,
	name string, args *AccountAttachmentArgs, opts ...pulumi.ResourceOption) (*AccountAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.RoleId == nil {
		return nil, errors.New("invalid value for required argument 'RoleId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccountAttachment
	err := ctx.RegisterResource("sdm:index/accountAttachment:AccountAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountAttachment gets an existing AccountAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountAttachmentState, opts ...pulumi.ResourceOption) (*AccountAttachment, error) {
	var resource AccountAttachment
	err := ctx.ReadResource("sdm:index/accountAttachment:AccountAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountAttachment resources.
type accountAttachmentState struct {
	// The id of the account of this AccountAttachment.
	AccountId *string `pulumi:"accountId"`
	// The id of the attached role of this AccountAttachment.
	RoleId *string `pulumi:"roleId"`
}

type AccountAttachmentState struct {
	// The id of the account of this AccountAttachment.
	AccountId pulumi.StringPtrInput
	// The id of the attached role of this AccountAttachment.
	RoleId pulumi.StringPtrInput
}

func (AccountAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountAttachmentState)(nil)).Elem()
}

type accountAttachmentArgs struct {
	// The id of the account of this AccountAttachment.
	AccountId string `pulumi:"accountId"`
	// The id of the attached role of this AccountAttachment.
	RoleId string `pulumi:"roleId"`
}

// The set of arguments for constructing a AccountAttachment resource.
type AccountAttachmentArgs struct {
	// The id of the account of this AccountAttachment.
	AccountId pulumi.StringInput
	// The id of the attached role of this AccountAttachment.
	RoleId pulumi.StringInput
}

func (AccountAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountAttachmentArgs)(nil)).Elem()
}

type AccountAttachmentInput interface {
	pulumi.Input

	ToAccountAttachmentOutput() AccountAttachmentOutput
	ToAccountAttachmentOutputWithContext(ctx context.Context) AccountAttachmentOutput
}

func (*AccountAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAttachment)(nil)).Elem()
}

func (i *AccountAttachment) ToAccountAttachmentOutput() AccountAttachmentOutput {
	return i.ToAccountAttachmentOutputWithContext(context.Background())
}

func (i *AccountAttachment) ToAccountAttachmentOutputWithContext(ctx context.Context) AccountAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAttachmentOutput)
}

// AccountAttachmentArrayInput is an input type that accepts AccountAttachmentArray and AccountAttachmentArrayOutput values.
// You can construct a concrete instance of `AccountAttachmentArrayInput` via:
//
//	AccountAttachmentArray{ AccountAttachmentArgs{...} }
type AccountAttachmentArrayInput interface {
	pulumi.Input

	ToAccountAttachmentArrayOutput() AccountAttachmentArrayOutput
	ToAccountAttachmentArrayOutputWithContext(context.Context) AccountAttachmentArrayOutput
}

type AccountAttachmentArray []AccountAttachmentInput

func (AccountAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountAttachment)(nil)).Elem()
}

func (i AccountAttachmentArray) ToAccountAttachmentArrayOutput() AccountAttachmentArrayOutput {
	return i.ToAccountAttachmentArrayOutputWithContext(context.Background())
}

func (i AccountAttachmentArray) ToAccountAttachmentArrayOutputWithContext(ctx context.Context) AccountAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAttachmentArrayOutput)
}

// AccountAttachmentMapInput is an input type that accepts AccountAttachmentMap and AccountAttachmentMapOutput values.
// You can construct a concrete instance of `AccountAttachmentMapInput` via:
//
//	AccountAttachmentMap{ "key": AccountAttachmentArgs{...} }
type AccountAttachmentMapInput interface {
	pulumi.Input

	ToAccountAttachmentMapOutput() AccountAttachmentMapOutput
	ToAccountAttachmentMapOutputWithContext(context.Context) AccountAttachmentMapOutput
}

type AccountAttachmentMap map[string]AccountAttachmentInput

func (AccountAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountAttachment)(nil)).Elem()
}

func (i AccountAttachmentMap) ToAccountAttachmentMapOutput() AccountAttachmentMapOutput {
	return i.ToAccountAttachmentMapOutputWithContext(context.Background())
}

func (i AccountAttachmentMap) ToAccountAttachmentMapOutputWithContext(ctx context.Context) AccountAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAttachmentMapOutput)
}

type AccountAttachmentOutput struct{ *pulumi.OutputState }

func (AccountAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAttachment)(nil)).Elem()
}

func (o AccountAttachmentOutput) ToAccountAttachmentOutput() AccountAttachmentOutput {
	return o
}

func (o AccountAttachmentOutput) ToAccountAttachmentOutputWithContext(ctx context.Context) AccountAttachmentOutput {
	return o
}

// The id of the account of this AccountAttachment.
func (o AccountAttachmentOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountAttachment) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// The id of the attached role of this AccountAttachment.
func (o AccountAttachmentOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountAttachment) pulumi.StringOutput { return v.RoleId }).(pulumi.StringOutput)
}

type AccountAttachmentArrayOutput struct{ *pulumi.OutputState }

func (AccountAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountAttachment)(nil)).Elem()
}

func (o AccountAttachmentArrayOutput) ToAccountAttachmentArrayOutput() AccountAttachmentArrayOutput {
	return o
}

func (o AccountAttachmentArrayOutput) ToAccountAttachmentArrayOutputWithContext(ctx context.Context) AccountAttachmentArrayOutput {
	return o
}

func (o AccountAttachmentArrayOutput) Index(i pulumi.IntInput) AccountAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccountAttachment {
		return vs[0].([]*AccountAttachment)[vs[1].(int)]
	}).(AccountAttachmentOutput)
}

type AccountAttachmentMapOutput struct{ *pulumi.OutputState }

func (AccountAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountAttachment)(nil)).Elem()
}

func (o AccountAttachmentMapOutput) ToAccountAttachmentMapOutput() AccountAttachmentMapOutput {
	return o
}

func (o AccountAttachmentMapOutput) ToAccountAttachmentMapOutputWithContext(ctx context.Context) AccountAttachmentMapOutput {
	return o
}

func (o AccountAttachmentMapOutput) MapIndex(k pulumi.StringInput) AccountAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccountAttachment {
		return vs[0].(map[string]*AccountAttachment)[vs[1].(string)]
	}).(AccountAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountAttachmentInput)(nil)).Elem(), &AccountAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountAttachmentArrayInput)(nil)).Elem(), AccountAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountAttachmentMapInput)(nil)).Elem(), AccountAttachmentMap{})
	pulumi.RegisterOutputType(AccountAttachmentOutput{})
	pulumi.RegisterOutputType(AccountAttachmentArrayOutput{})
	pulumi.RegisterOutputType(AccountAttachmentMapOutput{})
}
