// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdm

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-sdm/sdk/go/sdm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ManagedSecret contains details about managed secret
func LookupManagedSecret(ctx *pulumi.Context, args *LookupManagedSecretArgs, opts ...pulumi.InvokeOption) (*LookupManagedSecretResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupManagedSecretResult
	err := ctx.Invoke("sdm:index/getManagedSecret:getManagedSecret", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedSecret.
type LookupManagedSecretArgs struct {
	// Unique identifier of the Managed Secret.
	Id *string `pulumi:"id"`
	// Unique human-readable name of the Managed Secret.
	Name *string `pulumi:"name"`
	// An ID of a Secret Engine linked with the Managed Secret.
	SecretEngineId *string `pulumi:"secretEngineId"`
	// Tags is a map of key, value pairs.
	Tags map[string]string `pulumi:"tags"`
	// Sensitive value of the secret.
	Value *string `pulumi:"value"`
}

// A collection of values returned by getManagedSecret.
type LookupManagedSecretResult struct {
	// public part of the secret value
	Config string `pulumi:"config"`
	// Timestamp of when secret is going to be rotated
	ExpiresAt string `pulumi:"expiresAt"`
	// Unique identifier of the Managed Secret.
	Id *string `pulumi:"id"`
	// a list of strings of ids of data sources that match the given arguments.
	Ids []string `pulumi:"ids"`
	// Timestamp of when secret was last rotated
	LastRotatedAt string `pulumi:"lastRotatedAt"`
	// A list where each element has the following attributes:
	ManagedSecrets []GetManagedSecretManagedSecret `pulumi:"managedSecrets"`
	// Unique human-readable name of the Managed Secret.
	Name *string `pulumi:"name"`
	// An ID of a Secret Engine linked with the Managed Secret.
	SecretEngineId *string `pulumi:"secretEngineId"`
	// Path in a secret store.
	SecretStorePath string `pulumi:"secretStorePath"`
	// Tags is a map of key, value pairs.
	Tags map[string]string `pulumi:"tags"`
	// Sensitive value of the secret.
	Value *string `pulumi:"value"`
}

func LookupManagedSecretOutput(ctx *pulumi.Context, args LookupManagedSecretOutputArgs, opts ...pulumi.InvokeOption) LookupManagedSecretResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupManagedSecretResultOutput, error) {
			args := v.(LookupManagedSecretArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sdm:index/getManagedSecret:getManagedSecret", args, LookupManagedSecretResultOutput{}, options).(LookupManagedSecretResultOutput), nil
		}).(LookupManagedSecretResultOutput)
}

// A collection of arguments for invoking getManagedSecret.
type LookupManagedSecretOutputArgs struct {
	// Unique identifier of the Managed Secret.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Unique human-readable name of the Managed Secret.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// An ID of a Secret Engine linked with the Managed Secret.
	SecretEngineId pulumi.StringPtrInput `pulumi:"secretEngineId"`
	// Tags is a map of key, value pairs.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Sensitive value of the secret.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (LookupManagedSecretOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedSecretArgs)(nil)).Elem()
}

// A collection of values returned by getManagedSecret.
type LookupManagedSecretResultOutput struct{ *pulumi.OutputState }

func (LookupManagedSecretResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedSecretResult)(nil)).Elem()
}

func (o LookupManagedSecretResultOutput) ToLookupManagedSecretResultOutput() LookupManagedSecretResultOutput {
	return o
}

func (o LookupManagedSecretResultOutput) ToLookupManagedSecretResultOutputWithContext(ctx context.Context) LookupManagedSecretResultOutput {
	return o
}

// public part of the secret value
func (o LookupManagedSecretResultOutput) Config() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedSecretResult) string { return v.Config }).(pulumi.StringOutput)
}

// Timestamp of when secret is going to be rotated
func (o LookupManagedSecretResultOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedSecretResult) string { return v.ExpiresAt }).(pulumi.StringOutput)
}

// Unique identifier of the Managed Secret.
func (o LookupManagedSecretResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedSecretResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// a list of strings of ids of data sources that match the given arguments.
func (o LookupManagedSecretResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupManagedSecretResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// Timestamp of when secret was last rotated
func (o LookupManagedSecretResultOutput) LastRotatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedSecretResult) string { return v.LastRotatedAt }).(pulumi.StringOutput)
}

// A list where each element has the following attributes:
func (o LookupManagedSecretResultOutput) ManagedSecrets() GetManagedSecretManagedSecretArrayOutput {
	return o.ApplyT(func(v LookupManagedSecretResult) []GetManagedSecretManagedSecret { return v.ManagedSecrets }).(GetManagedSecretManagedSecretArrayOutput)
}

// Unique human-readable name of the Managed Secret.
func (o LookupManagedSecretResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedSecretResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// An ID of a Secret Engine linked with the Managed Secret.
func (o LookupManagedSecretResultOutput) SecretEngineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedSecretResult) *string { return v.SecretEngineId }).(pulumi.StringPtrOutput)
}

// Path in a secret store.
func (o LookupManagedSecretResultOutput) SecretStorePath() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedSecretResult) string { return v.SecretStorePath }).(pulumi.StringOutput)
}

// Tags is a map of key, value pairs.
func (o LookupManagedSecretResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupManagedSecretResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Sensitive value of the secret.
func (o LookupManagedSecretResultOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedSecretResult) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupManagedSecretResultOutput{})
}
