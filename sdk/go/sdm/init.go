// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdm

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pierskarsenbarg/pulumi-sdm/sdk/go/sdm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "sdm:index/account:Account":
		r = &Account{}
	case "sdm:index/accountAttachment:AccountAttachment":
		r = &AccountAttachment{}
	case "sdm:index/node:Node":
		r = &Node{}
	case "sdm:index/peeringGroup:PeeringGroup":
		r = &PeeringGroup{}
	case "sdm:index/peeringGroupNode:PeeringGroupNode":
		r = &PeeringGroupNode{}
	case "sdm:index/peeringGroupPeer:PeeringGroupPeer":
		r = &PeeringGroupPeer{}
	case "sdm:index/peeringGroupResource:PeeringGroupResource":
		r = &PeeringGroupResource{}
	case "sdm:index/remoteIdentity:RemoteIdentity":
		r = &RemoteIdentity{}
	case "sdm:index/resource:Resource":
		r = &Resource{}
	case "sdm:index/role:Role":
		r = &Role{}
	case "sdm:index/secretStore:SecretStore":
		r = &SecretStore{}
	case "sdm:index/workflow:Workflow":
		r = &Workflow{}
	case "sdm:index/workflowApprover:WorkflowApprover":
		r = &WorkflowApprover{}
	case "sdm:index/workflowRole:WorkflowRole":
		r = &WorkflowRole{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:sdm" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"sdm",
		"index/account",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sdm",
		"index/accountAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sdm",
		"index/node",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sdm",
		"index/peeringGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sdm",
		"index/peeringGroupNode",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sdm",
		"index/peeringGroupPeer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sdm",
		"index/peeringGroupResource",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sdm",
		"index/remoteIdentity",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sdm",
		"index/resource",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sdm",
		"index/role",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sdm",
		"index/secretStore",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sdm",
		"index/workflow",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sdm",
		"index/workflowApprover",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sdm",
		"index/workflowRole",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"sdm",
		&pkg{version},
	)
}
