// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pierskarsenbarg/pulumi-sdm/sdk/go/sdm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Proxy Cluster Keys are authentication keys for all proxies within a cluster.
//
//	The proxies within a cluster share the same key. One cluster can have
//	multiple keys in order to facilitate key rotation.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-sdm/sdk/go/sdm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdm.NewProxyClusterKey(ctx, "testProxyClusterKey", &sdm.ProxyClusterKeyArgs{
//				ProxyClusterId: pulumi.String("n-12345123"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// This resource can be imported using the import command.
//
// ## Import
//
// A ProxyClusterKey can be imported using the id, e.g.,
//
// ```sh
// $ pulumi import sdm:index/proxyClusterKey:ProxyClusterKey example gk-12345678
// ```
type ProxyClusterKey struct {
	pulumi.CustomResourceState

	// The ID of the proxy cluster which this key authenticates to.
	ProxyClusterId pulumi.StringOutput `pulumi:"proxyClusterId"`
	SecretKey      pulumi.StringOutput `pulumi:"secretKey"`
}

// NewProxyClusterKey registers a new resource with the given unique name, arguments, and options.
func NewProxyClusterKey(ctx *pulumi.Context,
	name string, args *ProxyClusterKeyArgs, opts ...pulumi.ResourceOption) (*ProxyClusterKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProxyClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ProxyClusterId'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"secretKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProxyClusterKey
	err := ctx.RegisterResource("sdm:index/proxyClusterKey:ProxyClusterKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProxyClusterKey gets an existing ProxyClusterKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProxyClusterKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProxyClusterKeyState, opts ...pulumi.ResourceOption) (*ProxyClusterKey, error) {
	var resource ProxyClusterKey
	err := ctx.ReadResource("sdm:index/proxyClusterKey:ProxyClusterKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProxyClusterKey resources.
type proxyClusterKeyState struct {
	// The ID of the proxy cluster which this key authenticates to.
	ProxyClusterId *string `pulumi:"proxyClusterId"`
	SecretKey      *string `pulumi:"secretKey"`
}

type ProxyClusterKeyState struct {
	// The ID of the proxy cluster which this key authenticates to.
	ProxyClusterId pulumi.StringPtrInput
	SecretKey      pulumi.StringPtrInput
}

func (ProxyClusterKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*proxyClusterKeyState)(nil)).Elem()
}

type proxyClusterKeyArgs struct {
	// The ID of the proxy cluster which this key authenticates to.
	ProxyClusterId string `pulumi:"proxyClusterId"`
}

// The set of arguments for constructing a ProxyClusterKey resource.
type ProxyClusterKeyArgs struct {
	// The ID of the proxy cluster which this key authenticates to.
	ProxyClusterId pulumi.StringInput
}

func (ProxyClusterKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*proxyClusterKeyArgs)(nil)).Elem()
}

type ProxyClusterKeyInput interface {
	pulumi.Input

	ToProxyClusterKeyOutput() ProxyClusterKeyOutput
	ToProxyClusterKeyOutputWithContext(ctx context.Context) ProxyClusterKeyOutput
}

func (*ProxyClusterKey) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyClusterKey)(nil)).Elem()
}

func (i *ProxyClusterKey) ToProxyClusterKeyOutput() ProxyClusterKeyOutput {
	return i.ToProxyClusterKeyOutputWithContext(context.Background())
}

func (i *ProxyClusterKey) ToProxyClusterKeyOutputWithContext(ctx context.Context) ProxyClusterKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyClusterKeyOutput)
}

// ProxyClusterKeyArrayInput is an input type that accepts ProxyClusterKeyArray and ProxyClusterKeyArrayOutput values.
// You can construct a concrete instance of `ProxyClusterKeyArrayInput` via:
//
//	ProxyClusterKeyArray{ ProxyClusterKeyArgs{...} }
type ProxyClusterKeyArrayInput interface {
	pulumi.Input

	ToProxyClusterKeyArrayOutput() ProxyClusterKeyArrayOutput
	ToProxyClusterKeyArrayOutputWithContext(context.Context) ProxyClusterKeyArrayOutput
}

type ProxyClusterKeyArray []ProxyClusterKeyInput

func (ProxyClusterKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProxyClusterKey)(nil)).Elem()
}

func (i ProxyClusterKeyArray) ToProxyClusterKeyArrayOutput() ProxyClusterKeyArrayOutput {
	return i.ToProxyClusterKeyArrayOutputWithContext(context.Background())
}

func (i ProxyClusterKeyArray) ToProxyClusterKeyArrayOutputWithContext(ctx context.Context) ProxyClusterKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyClusterKeyArrayOutput)
}

// ProxyClusterKeyMapInput is an input type that accepts ProxyClusterKeyMap and ProxyClusterKeyMapOutput values.
// You can construct a concrete instance of `ProxyClusterKeyMapInput` via:
//
//	ProxyClusterKeyMap{ "key": ProxyClusterKeyArgs{...} }
type ProxyClusterKeyMapInput interface {
	pulumi.Input

	ToProxyClusterKeyMapOutput() ProxyClusterKeyMapOutput
	ToProxyClusterKeyMapOutputWithContext(context.Context) ProxyClusterKeyMapOutput
}

type ProxyClusterKeyMap map[string]ProxyClusterKeyInput

func (ProxyClusterKeyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProxyClusterKey)(nil)).Elem()
}

func (i ProxyClusterKeyMap) ToProxyClusterKeyMapOutput() ProxyClusterKeyMapOutput {
	return i.ToProxyClusterKeyMapOutputWithContext(context.Background())
}

func (i ProxyClusterKeyMap) ToProxyClusterKeyMapOutputWithContext(ctx context.Context) ProxyClusterKeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyClusterKeyMapOutput)
}

type ProxyClusterKeyOutput struct{ *pulumi.OutputState }

func (ProxyClusterKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyClusterKey)(nil)).Elem()
}

func (o ProxyClusterKeyOutput) ToProxyClusterKeyOutput() ProxyClusterKeyOutput {
	return o
}

func (o ProxyClusterKeyOutput) ToProxyClusterKeyOutputWithContext(ctx context.Context) ProxyClusterKeyOutput {
	return o
}

// The ID of the proxy cluster which this key authenticates to.
func (o ProxyClusterKeyOutput) ProxyClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxyClusterKey) pulumi.StringOutput { return v.ProxyClusterId }).(pulumi.StringOutput)
}

func (o ProxyClusterKeyOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxyClusterKey) pulumi.StringOutput { return v.SecretKey }).(pulumi.StringOutput)
}

type ProxyClusterKeyArrayOutput struct{ *pulumi.OutputState }

func (ProxyClusterKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProxyClusterKey)(nil)).Elem()
}

func (o ProxyClusterKeyArrayOutput) ToProxyClusterKeyArrayOutput() ProxyClusterKeyArrayOutput {
	return o
}

func (o ProxyClusterKeyArrayOutput) ToProxyClusterKeyArrayOutputWithContext(ctx context.Context) ProxyClusterKeyArrayOutput {
	return o
}

func (o ProxyClusterKeyArrayOutput) Index(i pulumi.IntInput) ProxyClusterKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ProxyClusterKey {
		return vs[0].([]*ProxyClusterKey)[vs[1].(int)]
	}).(ProxyClusterKeyOutput)
}

type ProxyClusterKeyMapOutput struct{ *pulumi.OutputState }

func (ProxyClusterKeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProxyClusterKey)(nil)).Elem()
}

func (o ProxyClusterKeyMapOutput) ToProxyClusterKeyMapOutput() ProxyClusterKeyMapOutput {
	return o
}

func (o ProxyClusterKeyMapOutput) ToProxyClusterKeyMapOutputWithContext(ctx context.Context) ProxyClusterKeyMapOutput {
	return o
}

func (o ProxyClusterKeyMapOutput) MapIndex(k pulumi.StringInput) ProxyClusterKeyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ProxyClusterKey {
		return vs[0].(map[string]*ProxyClusterKey)[vs[1].(string)]
	}).(ProxyClusterKeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyClusterKeyInput)(nil)).Elem(), &ProxyClusterKey{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyClusterKeyArrayInput)(nil)).Elem(), ProxyClusterKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyClusterKeyMapInput)(nil)).Elem(), ProxyClusterKeyMap{})
	pulumi.RegisterOutputType(ProxyClusterKeyOutput{})
	pulumi.RegisterOutputType(ProxyClusterKeyArrayOutput{})
	pulumi.RegisterOutputType(ProxyClusterKeyMapOutput{})
}
