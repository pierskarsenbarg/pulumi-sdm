// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pierskarsenbarg/pulumi-sdm/sdk/go/sdm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ApprovalWorkflowStep links an approval workflow step to an ApprovalWorkflow
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-sdm/sdk/go/sdm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdm.NewApprovalWorkflowStep(ctx, "approvalWorkflowStepExample", &sdm.ApprovalWorkflowStepArgs{
//				ApprovalFlowId: pulumi.String("af-343865"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
// This resource can be imported using the import command.
//
// ## Import
//
// A ApprovalWorkflowStep can be imported using the id, e.g.,
//
// ```sh
// $ pulumi import sdm:index/approvalWorkflowStep:ApprovalWorkflowStep example afs-12345678
// ```
type ApprovalWorkflowStep struct {
	pulumi.CustomResourceState

	// The approval flow id specified the approval workfflow that this step belongs to
	ApprovalFlowId pulumi.StringOutput `pulumi:"approvalFlowId"`
}

// NewApprovalWorkflowStep registers a new resource with the given unique name, arguments, and options.
func NewApprovalWorkflowStep(ctx *pulumi.Context,
	name string, args *ApprovalWorkflowStepArgs, opts ...pulumi.ResourceOption) (*ApprovalWorkflowStep, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApprovalFlowId == nil {
		return nil, errors.New("invalid value for required argument 'ApprovalFlowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApprovalWorkflowStep
	err := ctx.RegisterResource("sdm:index/approvalWorkflowStep:ApprovalWorkflowStep", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApprovalWorkflowStep gets an existing ApprovalWorkflowStep resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApprovalWorkflowStep(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApprovalWorkflowStepState, opts ...pulumi.ResourceOption) (*ApprovalWorkflowStep, error) {
	var resource ApprovalWorkflowStep
	err := ctx.ReadResource("sdm:index/approvalWorkflowStep:ApprovalWorkflowStep", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApprovalWorkflowStep resources.
type approvalWorkflowStepState struct {
	// The approval flow id specified the approval workfflow that this step belongs to
	ApprovalFlowId *string `pulumi:"approvalFlowId"`
}

type ApprovalWorkflowStepState struct {
	// The approval flow id specified the approval workfflow that this step belongs to
	ApprovalFlowId pulumi.StringPtrInput
}

func (ApprovalWorkflowStepState) ElementType() reflect.Type {
	return reflect.TypeOf((*approvalWorkflowStepState)(nil)).Elem()
}

type approvalWorkflowStepArgs struct {
	// The approval flow id specified the approval workfflow that this step belongs to
	ApprovalFlowId string `pulumi:"approvalFlowId"`
}

// The set of arguments for constructing a ApprovalWorkflowStep resource.
type ApprovalWorkflowStepArgs struct {
	// The approval flow id specified the approval workfflow that this step belongs to
	ApprovalFlowId pulumi.StringInput
}

func (ApprovalWorkflowStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*approvalWorkflowStepArgs)(nil)).Elem()
}

type ApprovalWorkflowStepInput interface {
	pulumi.Input

	ToApprovalWorkflowStepOutput() ApprovalWorkflowStepOutput
	ToApprovalWorkflowStepOutputWithContext(ctx context.Context) ApprovalWorkflowStepOutput
}

func (*ApprovalWorkflowStep) ElementType() reflect.Type {
	return reflect.TypeOf((**ApprovalWorkflowStep)(nil)).Elem()
}

func (i *ApprovalWorkflowStep) ToApprovalWorkflowStepOutput() ApprovalWorkflowStepOutput {
	return i.ToApprovalWorkflowStepOutputWithContext(context.Background())
}

func (i *ApprovalWorkflowStep) ToApprovalWorkflowStepOutputWithContext(ctx context.Context) ApprovalWorkflowStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApprovalWorkflowStepOutput)
}

// ApprovalWorkflowStepArrayInput is an input type that accepts ApprovalWorkflowStepArray and ApprovalWorkflowStepArrayOutput values.
// You can construct a concrete instance of `ApprovalWorkflowStepArrayInput` via:
//
//	ApprovalWorkflowStepArray{ ApprovalWorkflowStepArgs{...} }
type ApprovalWorkflowStepArrayInput interface {
	pulumi.Input

	ToApprovalWorkflowStepArrayOutput() ApprovalWorkflowStepArrayOutput
	ToApprovalWorkflowStepArrayOutputWithContext(context.Context) ApprovalWorkflowStepArrayOutput
}

type ApprovalWorkflowStepArray []ApprovalWorkflowStepInput

func (ApprovalWorkflowStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApprovalWorkflowStep)(nil)).Elem()
}

func (i ApprovalWorkflowStepArray) ToApprovalWorkflowStepArrayOutput() ApprovalWorkflowStepArrayOutput {
	return i.ToApprovalWorkflowStepArrayOutputWithContext(context.Background())
}

func (i ApprovalWorkflowStepArray) ToApprovalWorkflowStepArrayOutputWithContext(ctx context.Context) ApprovalWorkflowStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApprovalWorkflowStepArrayOutput)
}

// ApprovalWorkflowStepMapInput is an input type that accepts ApprovalWorkflowStepMap and ApprovalWorkflowStepMapOutput values.
// You can construct a concrete instance of `ApprovalWorkflowStepMapInput` via:
//
//	ApprovalWorkflowStepMap{ "key": ApprovalWorkflowStepArgs{...} }
type ApprovalWorkflowStepMapInput interface {
	pulumi.Input

	ToApprovalWorkflowStepMapOutput() ApprovalWorkflowStepMapOutput
	ToApprovalWorkflowStepMapOutputWithContext(context.Context) ApprovalWorkflowStepMapOutput
}

type ApprovalWorkflowStepMap map[string]ApprovalWorkflowStepInput

func (ApprovalWorkflowStepMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApprovalWorkflowStep)(nil)).Elem()
}

func (i ApprovalWorkflowStepMap) ToApprovalWorkflowStepMapOutput() ApprovalWorkflowStepMapOutput {
	return i.ToApprovalWorkflowStepMapOutputWithContext(context.Background())
}

func (i ApprovalWorkflowStepMap) ToApprovalWorkflowStepMapOutputWithContext(ctx context.Context) ApprovalWorkflowStepMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApprovalWorkflowStepMapOutput)
}

type ApprovalWorkflowStepOutput struct{ *pulumi.OutputState }

func (ApprovalWorkflowStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApprovalWorkflowStep)(nil)).Elem()
}

func (o ApprovalWorkflowStepOutput) ToApprovalWorkflowStepOutput() ApprovalWorkflowStepOutput {
	return o
}

func (o ApprovalWorkflowStepOutput) ToApprovalWorkflowStepOutputWithContext(ctx context.Context) ApprovalWorkflowStepOutput {
	return o
}

// The approval flow id specified the approval workfflow that this step belongs to
func (o ApprovalWorkflowStepOutput) ApprovalFlowId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApprovalWorkflowStep) pulumi.StringOutput { return v.ApprovalFlowId }).(pulumi.StringOutput)
}

type ApprovalWorkflowStepArrayOutput struct{ *pulumi.OutputState }

func (ApprovalWorkflowStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApprovalWorkflowStep)(nil)).Elem()
}

func (o ApprovalWorkflowStepArrayOutput) ToApprovalWorkflowStepArrayOutput() ApprovalWorkflowStepArrayOutput {
	return o
}

func (o ApprovalWorkflowStepArrayOutput) ToApprovalWorkflowStepArrayOutputWithContext(ctx context.Context) ApprovalWorkflowStepArrayOutput {
	return o
}

func (o ApprovalWorkflowStepArrayOutput) Index(i pulumi.IntInput) ApprovalWorkflowStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApprovalWorkflowStep {
		return vs[0].([]*ApprovalWorkflowStep)[vs[1].(int)]
	}).(ApprovalWorkflowStepOutput)
}

type ApprovalWorkflowStepMapOutput struct{ *pulumi.OutputState }

func (ApprovalWorkflowStepMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApprovalWorkflowStep)(nil)).Elem()
}

func (o ApprovalWorkflowStepMapOutput) ToApprovalWorkflowStepMapOutput() ApprovalWorkflowStepMapOutput {
	return o
}

func (o ApprovalWorkflowStepMapOutput) ToApprovalWorkflowStepMapOutputWithContext(ctx context.Context) ApprovalWorkflowStepMapOutput {
	return o
}

func (o ApprovalWorkflowStepMapOutput) MapIndex(k pulumi.StringInput) ApprovalWorkflowStepOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApprovalWorkflowStep {
		return vs[0].(map[string]*ApprovalWorkflowStep)[vs[1].(string)]
	}).(ApprovalWorkflowStepOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApprovalWorkflowStepInput)(nil)).Elem(), &ApprovalWorkflowStep{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApprovalWorkflowStepArrayInput)(nil)).Elem(), ApprovalWorkflowStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApprovalWorkflowStepMapInput)(nil)).Elem(), ApprovalWorkflowStepMap{})
	pulumi.RegisterOutputType(ApprovalWorkflowStepOutput{})
	pulumi.RegisterOutputType(ApprovalWorkflowStepArrayOutput{})
	pulumi.RegisterOutputType(ApprovalWorkflowStepMapOutput{})
}
