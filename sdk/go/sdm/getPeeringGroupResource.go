// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdm

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-sdm/sdk/v2/go/sdm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// PeeringGroupResource represents the attachment between a PeeringGroup and a Resource.
func LookupPeeringGroupResource(ctx *pulumi.Context, args *LookupPeeringGroupResourceArgs, opts ...pulumi.InvokeOption) (*LookupPeeringGroupResourceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPeeringGroupResourceResult
	err := ctx.Invoke("sdm:index/getPeeringGroupResource:getPeeringGroupResource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPeeringGroupResource.
type LookupPeeringGroupResourceArgs struct {
	// Peering Group ID to which the resource will be attached to.
	GroupId *string `pulumi:"groupId"`
	// Unique identifier of the Attachment.
	Id *string `pulumi:"id"`
	// Resource ID to be attached.
	ResourceId *string `pulumi:"resourceId"`
}

// A collection of values returned by getPeeringGroupResource.
type LookupPeeringGroupResourceResult struct {
	// Peering Group ID to which the resource will be attached to.
	GroupId *string `pulumi:"groupId"`
	// Unique identifier of the Attachment.
	Id *string `pulumi:"id"`
	// a list of strings of ids of data sources that match the given arguments.
	Ids []string `pulumi:"ids"`
	// A list where each element has the following attributes:
	PeeringGroupResources []GetPeeringGroupResourcePeeringGroupResource `pulumi:"peeringGroupResources"`
	// Resource ID to be attached.
	ResourceId *string `pulumi:"resourceId"`
}

func LookupPeeringGroupResourceOutput(ctx *pulumi.Context, args LookupPeeringGroupResourceOutputArgs, opts ...pulumi.InvokeOption) LookupPeeringGroupResourceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPeeringGroupResourceResult, error) {
			args := v.(LookupPeeringGroupResourceArgs)
			r, err := LookupPeeringGroupResource(ctx, &args, opts...)
			var s LookupPeeringGroupResourceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPeeringGroupResourceResultOutput)
}

// A collection of arguments for invoking getPeeringGroupResource.
type LookupPeeringGroupResourceOutputArgs struct {
	// Peering Group ID to which the resource will be attached to.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// Unique identifier of the Attachment.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource ID to be attached.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (LookupPeeringGroupResourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPeeringGroupResourceArgs)(nil)).Elem()
}

// A collection of values returned by getPeeringGroupResource.
type LookupPeeringGroupResourceResultOutput struct{ *pulumi.OutputState }

func (LookupPeeringGroupResourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPeeringGroupResourceResult)(nil)).Elem()
}

func (o LookupPeeringGroupResourceResultOutput) ToLookupPeeringGroupResourceResultOutput() LookupPeeringGroupResourceResultOutput {
	return o
}

func (o LookupPeeringGroupResourceResultOutput) ToLookupPeeringGroupResourceResultOutputWithContext(ctx context.Context) LookupPeeringGroupResourceResultOutput {
	return o
}

// Peering Group ID to which the resource will be attached to.
func (o LookupPeeringGroupResourceResultOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPeeringGroupResourceResult) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// Unique identifier of the Attachment.
func (o LookupPeeringGroupResourceResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPeeringGroupResourceResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// a list of strings of ids of data sources that match the given arguments.
func (o LookupPeeringGroupResourceResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPeeringGroupResourceResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// A list where each element has the following attributes:
func (o LookupPeeringGroupResourceResultOutput) PeeringGroupResources() GetPeeringGroupResourcePeeringGroupResourceArrayOutput {
	return o.ApplyT(func(v LookupPeeringGroupResourceResult) []GetPeeringGroupResourcePeeringGroupResource {
		return v.PeeringGroupResources
	}).(GetPeeringGroupResourcePeeringGroupResourceArrayOutput)
}

// Resource ID to be attached.
func (o LookupPeeringGroupResourceResultOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPeeringGroupResourceResult) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPeeringGroupResourceResultOutput{})
}
