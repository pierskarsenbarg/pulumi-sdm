// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * WorkflowApprover is an account or a role with the ability to approve requests bound to a workflow.
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdm from "@pierskarsenbarg/sdm";
 *
 * const workflowApproverAccountExample = new sdm.WorkflowApprover("workflowApproverAccountExample", {
 *     accountId: "a-234605",
 *     workflowId: "aw-6799234",
 * });
 * const workflowApproverRoleExample = new sdm.WorkflowApprover("workflowApproverRoleExample", {
 *     roleId: "r-542982",
 *     workflowId: "aw-1935694",
 * });
 * ```
 * This resource can be imported using the import command.
 *
 * ## Import
 *
 * A WorkflowApprover can be imported using the id, e.g.,
 *
 * ```sh
 * $ pulumi import sdm:index/workflowApprover:WorkflowApprover example nt-12345678
 * ```
 */
export class WorkflowApprover extends pulumi.CustomResource {
    /**
     * Get an existing WorkflowApprover resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkflowApproverState, opts?: pulumi.CustomResourceOptions): WorkflowApprover {
        return new WorkflowApprover(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdm:index/workflowApprover:WorkflowApprover';

    /**
     * Returns true if the given object is an instance of WorkflowApprover.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkflowApprover {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkflowApprover.__pulumiType;
    }

    /**
     * The approver account id.
     */
    public readonly accountId!: pulumi.Output<string | undefined>;
    /**
     * The approver role id
     */
    public readonly roleId!: pulumi.Output<string | undefined>;
    /**
     * The workflow id.
     */
    public readonly workflowId!: pulumi.Output<string>;

    /**
     * Create a WorkflowApprover resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkflowApproverArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkflowApproverArgs | WorkflowApproverState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkflowApproverState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["roleId"] = state ? state.roleId : undefined;
            resourceInputs["workflowId"] = state ? state.workflowId : undefined;
        } else {
            const args = argsOrState as WorkflowApproverArgs | undefined;
            if ((!args || args.workflowId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workflowId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["roleId"] = args ? args.roleId : undefined;
            resourceInputs["workflowId"] = args ? args.workflowId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkflowApprover.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WorkflowApprover resources.
 */
export interface WorkflowApproverState {
    /**
     * The approver account id.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The approver role id
     */
    roleId?: pulumi.Input<string>;
    /**
     * The workflow id.
     */
    workflowId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WorkflowApprover resource.
 */
export interface WorkflowApproverArgs {
    /**
     * The approver account id.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The approver role id
     */
    roleId?: pulumi.Input<string>;
    /**
     * The workflow id.
     */
    workflowId: pulumi.Input<string>;
}
