// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("sdm");

/**
 * A GUID identifying the API key used to authenticate with the StrongDM API.
 */
export declare const apiAccessKey: string | undefined;
Object.defineProperty(exports, "apiAccessKey", {
    get() {
        return __config.get("apiAccessKey");
    },
    enumerable: true,
});

/**
 * A base64 encoded secret key used to authenticate with the StrongDM API.
 */
export declare const apiSecretKey: string | undefined;
Object.defineProperty(exports, "apiSecretKey", {
    get() {
        return __config.get("apiSecretKey");
    },
    enumerable: true,
});

/**
 * The host and port of the StrongDM API endpoint.
 */
export declare const host: string | undefined;
Object.defineProperty(exports, "host", {
    get() {
        return __config.get("host");
    },
    enumerable: true,
});

/**
 * Whether experienced rate limits should cause the client to sleep instead of erroring out
 */
export declare const retryRateLimitErrors: boolean | undefined;
Object.defineProperty(exports, "retryRateLimitErrors", {
    get() {
        return __config.getObject<boolean>("retryRateLimitErrors");
    },
    enumerable: true,
});

