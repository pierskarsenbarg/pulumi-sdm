// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./account";
export * from "./accountAttachment";
export * from "./getAccount";
export * from "./getAccountAttachment";
export * from "./getNode";
export * from "./getRemoteIdentity";
export * from "./getRemoteIdentityGroup";
export * from "./getResource";
export * from "./getRole";
export * from "./getSecretStore";
export * from "./getSshCaPubkey";
export * from "./node";
export * from "./provider";
export * from "./remoteIdentity";
export * from "./resource";
export * from "./role";
export * from "./secretStore";

// Export sub-modules:
import * as config from "./config";
import * as types from "./types";

export {
    config,
    types,
};

// Import resources to register:
import { Account } from "./account";
import { AccountAttachment } from "./accountAttachment";
import { Node } from "./node";
import { RemoteIdentity } from "./remoteIdentity";
import { Resource } from "./resource";
import { Role } from "./role";
import { SecretStore } from "./secretStore";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "sdm:index/account:Account":
                return new Account(name, <any>undefined, { urn })
            case "sdm:index/accountAttachment:AccountAttachment":
                return new AccountAttachment(name, <any>undefined, { urn })
            case "sdm:index/node:Node":
                return new Node(name, <any>undefined, { urn })
            case "sdm:index/remoteIdentity:RemoteIdentity":
                return new RemoteIdentity(name, <any>undefined, { urn })
            case "sdm:index/resource:Resource":
                return new Resource(name, <any>undefined, { urn })
            case "sdm:index/role:Role":
                return new Role(name, <any>undefined, { urn })
            case "sdm:index/secretStore:SecretStore":
                return new SecretStore(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("sdm", "index/account", _module)
pulumi.runtime.registerResourceModule("sdm", "index/accountAttachment", _module)
pulumi.runtime.registerResourceModule("sdm", "index/node", _module)
pulumi.runtime.registerResourceModule("sdm", "index/remoteIdentity", _module)
pulumi.runtime.registerResourceModule("sdm", "index/resource", _module)
pulumi.runtime.registerResourceModule("sdm", "index/role", _module)
pulumi.runtime.registerResourceModule("sdm", "index/secretStore", _module)

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("sdm", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:sdm") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
