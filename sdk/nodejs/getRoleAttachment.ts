// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * A RoleAttachment assigns a role to a composite role.
 *
 *  Deprecated: use multi-role via AccountAttachments instead.
 * This data source is deprecated.
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdm from "@pulumi/sdm";
 *
 * const roleAttachmentQuery = pulumi.output(sdm.getRoleAttachment({
 *     compositeRoleId: "r-233332245",
 * }));
 * ```
 */
export function getRoleAttachment(args?: GetRoleAttachmentArgs, opts?: pulumi.InvokeOptions): Promise<GetRoleAttachmentResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("sdm:index/getRoleAttachment:getRoleAttachment", {
        "attachedRoleId": args.attachedRoleId,
        "compositeRoleId": args.compositeRoleId,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getRoleAttachment.
 */
export interface GetRoleAttachmentArgs {
    /**
     * The id of the attached role of this RoleAttachment.
     */
    attachedRoleId?: string;
    /**
     * The id of the composite role of this RoleAttachment.
     */
    compositeRoleId?: string;
    /**
     * Unique identifier of the RoleAttachment.
     */
    id?: string;
}

/**
 * A collection of values returned by getRoleAttachment.
 */
export interface GetRoleAttachmentResult {
    /**
     * The id of the attached role of this RoleAttachment.
     */
    readonly attachedRoleId?: string;
    /**
     * The id of the composite role of this RoleAttachment.
     */
    readonly compositeRoleId?: string;
    /**
     * Unique identifier of the RoleAttachment.
     */
    readonly id?: string;
    /**
     * a list of strings of ids of data sources that match the given arguments.
     */
    readonly ids: string[];
    /**
     * A list where each element has the following attributes:
     */
    readonly roleAttachments: outputs.GetRoleAttachmentRoleAttachment[];
}

export function getRoleAttachmentOutput(args?: GetRoleAttachmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoleAttachmentResult> {
    return pulumi.output(args).apply(a => getRoleAttachment(a, opts))
}

/**
 * A collection of arguments for invoking getRoleAttachment.
 */
export interface GetRoleAttachmentOutputArgs {
    /**
     * The id of the attached role of this RoleAttachment.
     */
    attachedRoleId?: pulumi.Input<string>;
    /**
     * The id of the composite role of this RoleAttachment.
     */
    compositeRoleId?: pulumi.Input<string>;
    /**
     * Unique identifier of the RoleAttachment.
     */
    id?: pulumi.Input<string>;
}
