// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * IdentityAliases define the username to be used for a specific account
 *  when connecting to a remote resource using that identity set.
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdm from "@pierskarsenbarg/sdm";
 *
 * const user = sdm.getIdentityAlias({
 *     id: "i-0900909",
 *     username: "user",
 * });
 * ```
 */
export function getIdentityAlias(args?: GetIdentityAliasArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityAliasResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdm:index/getIdentityAlias:getIdentityAlias", {
        "accountId": args.accountId,
        "id": args.id,
        "identitySetId": args.identitySetId,
        "username": args.username,
    }, opts);
}

/**
 * A collection of arguments for invoking getIdentityAlias.
 */
export interface GetIdentityAliasArgs {
    /**
     * The account for this identity alias.
     */
    accountId?: string;
    /**
     * Unique identifier of the IdentityAlias.
     */
    id?: string;
    /**
     * The identity set.
     */
    identitySetId?: string;
    /**
     * The username to be used as the identity alias for this account.
     */
    username?: string;
}

/**
 * A collection of values returned by getIdentityAlias.
 */
export interface GetIdentityAliasResult {
    /**
     * The account for this identity alias.
     */
    readonly accountId?: string;
    /**
     * Unique identifier of the IdentityAlias.
     */
    readonly id?: string;
    /**
     * A list where each element has the following attributes:
     */
    readonly identityAliases: outputs.GetIdentityAliasIdentityAlias[];
    /**
     * The identity set.
     */
    readonly identitySetId?: string;
    /**
     * a list of strings of ids of data sources that match the given arguments.
     */
    readonly ids: string[];
    /**
     * The username to be used as the identity alias for this account.
     */
    readonly username?: string;
}
/**
 * IdentityAliases define the username to be used for a specific account
 *  when connecting to a remote resource using that identity set.
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdm from "@pierskarsenbarg/sdm";
 *
 * const user = sdm.getIdentityAlias({
 *     id: "i-0900909",
 *     username: "user",
 * });
 * ```
 */
export function getIdentityAliasOutput(args?: GetIdentityAliasOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetIdentityAliasResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sdm:index/getIdentityAlias:getIdentityAlias", {
        "accountId": args.accountId,
        "id": args.id,
        "identitySetId": args.identitySetId,
        "username": args.username,
    }, opts);
}

/**
 * A collection of arguments for invoking getIdentityAlias.
 */
export interface GetIdentityAliasOutputArgs {
    /**
     * The account for this identity alias.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Unique identifier of the IdentityAlias.
     */
    id?: pulumi.Input<string>;
    /**
     * The identity set.
     */
    identitySetId?: pulumi.Input<string>;
    /**
     * The username to be used as the identity alias for this account.
     */
    username?: pulumi.Input<string>;
}
