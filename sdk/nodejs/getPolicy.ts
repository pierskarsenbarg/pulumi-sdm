// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Policy is a collection of one or more statements that enforce fine-grained access control
 *  for the users of an organization.
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdm from "@pulumi/sdm";
 *
 * const policy = sdm.getPolicy({
 *     name: "policy-query",
 * });
 * ```
 */
export function getPolicy(args?: GetPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdm:index/getPolicy:getPolicy", {
        "description": args.description,
        "id": args.id,
        "name": args.name,
        "policy": args.policy,
    }, opts);
}

/**
 * A collection of arguments for invoking getPolicy.
 */
export interface GetPolicyArgs {
    /**
     * Optional description of the Policy.
     */
    description?: string;
    /**
     * Unique identifier of the Policy.
     */
    id?: string;
    /**
     * Unique human-readable name of the Policy.
     */
    name?: string;
    /**
     * The content of the Policy, in Cedar policy language.
     */
    policy?: string;
}

/**
 * A collection of values returned by getPolicy.
 */
export interface GetPolicyResult {
    /**
     * Optional description of the Policy.
     */
    readonly description?: string;
    /**
     * Unique identifier of the Policy.
     */
    readonly id?: string;
    /**
     * a list of strings of ids of data sources that match the given arguments.
     */
    readonly ids: string[];
    /**
     * Unique human-readable name of the Policy.
     */
    readonly name?: string;
    /**
     * A list where each element has the following attributes:
     */
    readonly policies: outputs.GetPolicyPolicy[];
    /**
     * The content of the Policy, in Cedar policy language.
     */
    readonly policy?: string;
}
/**
 * Policy is a collection of one or more statements that enforce fine-grained access control
 *  for the users of an organization.
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdm from "@pulumi/sdm";
 *
 * const policy = sdm.getPolicy({
 *     name: "policy-query",
 * });
 * ```
 */
export function getPolicyOutput(args?: GetPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicyResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sdm:index/getPolicy:getPolicy", {
        "description": args.description,
        "id": args.id,
        "name": args.name,
        "policy": args.policy,
    }, opts);
}

/**
 * A collection of arguments for invoking getPolicy.
 */
export interface GetPolicyOutputArgs {
    /**
     * Optional description of the Policy.
     */
    description?: pulumi.Input<string>;
    /**
     * Unique identifier of the Policy.
     */
    id?: pulumi.Input<string>;
    /**
     * Unique human-readable name of the Policy.
     */
    name?: pulumi.Input<string>;
    /**
     * The content of the Policy, in Cedar policy language.
     */
    policy?: pulumi.Input<string>;
}
