// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Workflows are the collection of rules that define the resources to which access can be requested,
 *  the users that can request that access, and the mechanism for approving those requests which can either
 *  but automatic approval or a set of users authorized to approve the requests.
 * ## Import
 *
 * A Workflow can be imported using the id, e.g.,
 *
 * ```sh
 * $ pulumi import sdm:index/workflow:Workflow example aw-12345678
 * ```
 */
export class Workflow extends pulumi.CustomResource {
    /**
     * Get an existing Workflow resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkflowState, opts?: pulumi.CustomResourceOptions): Workflow {
        return new Workflow(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdm:index/workflow:Workflow';

    /**
     * Returns true if the given object is an instance of Workflow.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Workflow {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Workflow.__pulumiType;
    }

    /**
     * Fixed Duration of access requests bound to this workflow. If fixed duration is provided, max duration must be empty. If neither max nor fixed duration are provided, requests that bind to this workflow will use the organization-level settings.
     */
    declare public readonly accessRequestFixedDuration: pulumi.Output<string | undefined>;
    /**
     * Maximum Duration of access requests bound to this workflow. If max duration is provided, fixed duration must be empty. If neither max nor fixed duration are provided, requests that bind to this workflow will use the organization-level settings.
     */
    declare public readonly accessRequestMaxDuration: pulumi.Output<string | undefined>;
    /**
     * AccessRules is a list of access rules defining the resources this Workflow provides access to.
     */
    declare public readonly accessRules: pulumi.Output<string>;
    /**
     * Optional approval flow ID identifies an approval flow that linked to the workflow
     */
    declare public readonly approvalFlowId: pulumi.Output<string | undefined>;
    /**
     * Optional auto grant setting to automatically approve requests or not, defaults to false.
     *
     * @deprecated auto_grant is deprecated, see docs for more info
     */
    declare public readonly autoGrant: pulumi.Output<boolean | undefined>;
    /**
     * Optional description of the Workflow.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Optional enabled state for workflow. This setting may be overridden by the system if the workflow doesn't meet the requirements to be enabled or if other conditions prevent enabling the workflow. The requirements to enable a workflow are that the workflow must be either set up for with auto grant enabled or have one or more WorkflowApprovers created for the workflow.
     */
    declare public readonly enabled: pulumi.Output<boolean | undefined>;
    /**
     * Unique human-readable name of the Workflow.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Optional weight for workflow to specify it's priority in matching a request.
     */
    declare public readonly weight: pulumi.Output<number>;

    /**
     * Create a Workflow resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: WorkflowArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkflowArgs | WorkflowState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkflowState | undefined;
            resourceInputs["accessRequestFixedDuration"] = state?.accessRequestFixedDuration;
            resourceInputs["accessRequestMaxDuration"] = state?.accessRequestMaxDuration;
            resourceInputs["accessRules"] = state?.accessRules;
            resourceInputs["approvalFlowId"] = state?.approvalFlowId;
            resourceInputs["autoGrant"] = state?.autoGrant;
            resourceInputs["description"] = state?.description;
            resourceInputs["enabled"] = state?.enabled;
            resourceInputs["name"] = state?.name;
            resourceInputs["weight"] = state?.weight;
        } else {
            const args = argsOrState as WorkflowArgs | undefined;
            resourceInputs["accessRequestFixedDuration"] = args?.accessRequestFixedDuration;
            resourceInputs["accessRequestMaxDuration"] = args?.accessRequestMaxDuration;
            resourceInputs["accessRules"] = args?.accessRules;
            resourceInputs["approvalFlowId"] = args?.approvalFlowId;
            resourceInputs["autoGrant"] = args?.autoGrant;
            resourceInputs["description"] = args?.description;
            resourceInputs["enabled"] = args?.enabled;
            resourceInputs["name"] = args?.name;
            resourceInputs["weight"] = args?.weight;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Workflow.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Workflow resources.
 */
export interface WorkflowState {
    /**
     * Fixed Duration of access requests bound to this workflow. If fixed duration is provided, max duration must be empty. If neither max nor fixed duration are provided, requests that bind to this workflow will use the organization-level settings.
     */
    accessRequestFixedDuration?: pulumi.Input<string>;
    /**
     * Maximum Duration of access requests bound to this workflow. If max duration is provided, fixed duration must be empty. If neither max nor fixed duration are provided, requests that bind to this workflow will use the organization-level settings.
     */
    accessRequestMaxDuration?: pulumi.Input<string>;
    /**
     * AccessRules is a list of access rules defining the resources this Workflow provides access to.
     */
    accessRules?: pulumi.Input<string>;
    /**
     * Optional approval flow ID identifies an approval flow that linked to the workflow
     */
    approvalFlowId?: pulumi.Input<string>;
    /**
     * Optional auto grant setting to automatically approve requests or not, defaults to false.
     *
     * @deprecated auto_grant is deprecated, see docs for more info
     */
    autoGrant?: pulumi.Input<boolean>;
    /**
     * Optional description of the Workflow.
     */
    description?: pulumi.Input<string>;
    /**
     * Optional enabled state for workflow. This setting may be overridden by the system if the workflow doesn't meet the requirements to be enabled or if other conditions prevent enabling the workflow. The requirements to enable a workflow are that the workflow must be either set up for with auto grant enabled or have one or more WorkflowApprovers created for the workflow.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Unique human-readable name of the Workflow.
     */
    name?: pulumi.Input<string>;
    /**
     * Optional weight for workflow to specify it's priority in matching a request.
     */
    weight?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Workflow resource.
 */
export interface WorkflowArgs {
    /**
     * Fixed Duration of access requests bound to this workflow. If fixed duration is provided, max duration must be empty. If neither max nor fixed duration are provided, requests that bind to this workflow will use the organization-level settings.
     */
    accessRequestFixedDuration?: pulumi.Input<string>;
    /**
     * Maximum Duration of access requests bound to this workflow. If max duration is provided, fixed duration must be empty. If neither max nor fixed duration are provided, requests that bind to this workflow will use the organization-level settings.
     */
    accessRequestMaxDuration?: pulumi.Input<string>;
    /**
     * AccessRules is a list of access rules defining the resources this Workflow provides access to.
     */
    accessRules?: pulumi.Input<string>;
    /**
     * Optional approval flow ID identifies an approval flow that linked to the workflow
     */
    approvalFlowId?: pulumi.Input<string>;
    /**
     * Optional auto grant setting to automatically approve requests or not, defaults to false.
     *
     * @deprecated auto_grant is deprecated, see docs for more info
     */
    autoGrant?: pulumi.Input<boolean>;
    /**
     * Optional description of the Workflow.
     */
    description?: pulumi.Input<string>;
    /**
     * Optional enabled state for workflow. This setting may be overridden by the system if the workflow doesn't meet the requirements to be enabled or if other conditions prevent enabling the workflow. The requirements to enable a workflow are that the workflow must be either set up for with auto grant enabled or have one or more WorkflowApprovers created for the workflow.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Unique human-readable name of the Workflow.
     */
    name?: pulumi.Input<string>;
    /**
     * Optional weight for workflow to specify it's priority in matching a request.
     */
    weight?: pulumi.Input<number>;
}
