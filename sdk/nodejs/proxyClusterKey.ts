// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Proxy Cluster Keys are authentication keys for all proxies within a cluster.
 *  The proxies within a cluster share the same key. One cluster can have
 *  multiple keys in order to facilitate key rotation.
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdm from "@pierskarsenbarg/sdm";
 *
 * const testProxyClusterKey = new sdm.ProxyClusterKey("testProxyClusterKey", {proxyClusterId: "n-12345123"});
 * ```
 * This resource can be imported using the import command.
 *
 * ## Import
 *
 * A ProxyClusterKey can be imported using the id, e.g.,
 *
 * ```sh
 * $ pulumi import sdm:index/proxyClusterKey:ProxyClusterKey example gk-12345678
 * ```
 */
export class ProxyClusterKey extends pulumi.CustomResource {
    /**
     * Get an existing ProxyClusterKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProxyClusterKeyState, opts?: pulumi.CustomResourceOptions): ProxyClusterKey {
        return new ProxyClusterKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdm:index/proxyClusterKey:ProxyClusterKey';

    /**
     * Returns true if the given object is an instance of ProxyClusterKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProxyClusterKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProxyClusterKey.__pulumiType;
    }

    /**
     * The ID of the proxy cluster which this key authenticates to.
     */
    public readonly proxyClusterId!: pulumi.Output<string>;
    public /*out*/ readonly secretKey!: pulumi.Output<string>;

    /**
     * Create a ProxyClusterKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProxyClusterKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProxyClusterKeyArgs | ProxyClusterKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProxyClusterKeyState | undefined;
            resourceInputs["proxyClusterId"] = state?.proxyClusterId;
            resourceInputs["secretKey"] = state?.secretKey;
        } else {
            const args = argsOrState as ProxyClusterKeyArgs | undefined;
            if (args?.proxyClusterId === undefined && !opts.urn) {
                throw new Error("Missing required property 'proxyClusterId'");
            }
            resourceInputs["proxyClusterId"] = args?.proxyClusterId;
            resourceInputs["secretKey"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["secretKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ProxyClusterKey.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ProxyClusterKey resources.
 */
export interface ProxyClusterKeyState {
    /**
     * The ID of the proxy cluster which this key authenticates to.
     */
    proxyClusterId?: pulumi.Input<string>;
    secretKey?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ProxyClusterKey resource.
 */
export interface ProxyClusterKeyArgs {
    /**
     * The ID of the proxy cluster which this key authenticates to.
     */
    proxyClusterId: pulumi.Input<string>;
}
