// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * A Resource can be imported using the id, e.g.,
 *
 * ```sh
 * $ pulumi import sdm:index/resource:Resource example rs-12345678
 * ```
 */
export class Resource extends pulumi.CustomResource {
    /**
     * Get an existing Resource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResourceState, opts?: pulumi.CustomResourceOptions): Resource {
        return new Resource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdm:index/resource:Resource';

    /**
     * Returns true if the given object is an instance of Resource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Resource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Resource.__pulumiType;
    }

    declare public readonly aerospike: pulumi.Output<outputs.ResourceAerospike | undefined>;
    declare public readonly aks: pulumi.Output<outputs.ResourceAks | undefined>;
    /**
     * AKSBasicAuth is currently unstable, and its API may change, or it may be removed, without a major version bump.
     */
    declare public readonly aksBasicAuth: pulumi.Output<outputs.ResourceAksBasicAuth | undefined>;
    declare public readonly aksServiceAccount: pulumi.Output<outputs.ResourceAksServiceAccount | undefined>;
    /**
     * @deprecated aks_service_account_user_impersonation is deprecated, see docs for more info
     */
    declare public readonly aksServiceAccountUserImpersonation: pulumi.Output<outputs.ResourceAksServiceAccountUserImpersonation | undefined>;
    /**
     * @deprecated aks_user_impersonation is deprecated, see docs for more info
     */
    declare public readonly aksUserImpersonation: pulumi.Output<outputs.ResourceAksUserImpersonation | undefined>;
    declare public readonly amazonEks: pulumi.Output<outputs.ResourceAmazonEks | undefined>;
    declare public readonly amazonEksInstanceProfile: pulumi.Output<outputs.ResourceAmazonEksInstanceProfile | undefined>;
    /**
     * @deprecated amazon_eks_instance_profile_user_impersonation is deprecated, see docs for more info
     */
    declare public readonly amazonEksInstanceProfileUserImpersonation: pulumi.Output<outputs.ResourceAmazonEksInstanceProfileUserImpersonation | undefined>;
    /**
     * @deprecated amazon_eks_user_impersonation is deprecated, see docs for more info
     */
    declare public readonly amazonEksUserImpersonation: pulumi.Output<outputs.ResourceAmazonEksUserImpersonation | undefined>;
    declare public readonly amazonEs: pulumi.Output<outputs.ResourceAmazonEs | undefined>;
    declare public readonly amazonEsiam: pulumi.Output<outputs.ResourceAmazonEsiam | undefined>;
    /**
     * AMQP is currently unstable, and its API may change, or it may be removed, without a major version bump.
     */
    declare public readonly amazonmqAmqp: pulumi.Output<outputs.ResourceAmazonmqAmqp | undefined>;
    declare public readonly amazonmqAmqp091: pulumi.Output<outputs.ResourceAmazonmqAmqp091 | undefined>;
    declare public readonly athena: pulumi.Output<outputs.ResourceAthena | undefined>;
    declare public readonly athenaIam: pulumi.Output<outputs.ResourceAthenaIam | undefined>;
    declare public readonly auroraMysql: pulumi.Output<outputs.ResourceAuroraMysql | undefined>;
    declare public readonly auroraMysqlIam: pulumi.Output<outputs.ResourceAuroraMysqlIam | undefined>;
    declare public readonly auroraPostgres: pulumi.Output<outputs.ResourceAuroraPostgres | undefined>;
    declare public readonly auroraPostgresIam: pulumi.Output<outputs.ResourceAuroraPostgresIam | undefined>;
    declare public readonly aws: pulumi.Output<outputs.ResourceAws | undefined>;
    declare public readonly awsConsole: pulumi.Output<outputs.ResourceAwsConsole | undefined>;
    declare public readonly awsConsoleStaticKeyPair: pulumi.Output<outputs.ResourceAwsConsoleStaticKeyPair | undefined>;
    declare public readonly awsInstanceProfile: pulumi.Output<outputs.ResourceAwsInstanceProfile | undefined>;
    declare public readonly azure: pulumi.Output<outputs.ResourceAzure | undefined>;
    declare public readonly azureCertificate: pulumi.Output<outputs.ResourceAzureCertificate | undefined>;
    declare public readonly azureMysql: pulumi.Output<outputs.ResourceAzureMysql | undefined>;
    declare public readonly azureMysqlManagedIdentity: pulumi.Output<outputs.ResourceAzureMysqlManagedIdentity | undefined>;
    declare public readonly azurePostgres: pulumi.Output<outputs.ResourceAzurePostgres | undefined>;
    declare public readonly azurePostgresManagedIdentity: pulumi.Output<outputs.ResourceAzurePostgresManagedIdentity | undefined>;
    declare public readonly bigQuery: pulumi.Output<outputs.ResourceBigQuery | undefined>;
    declare public readonly cassandra: pulumi.Output<outputs.ResourceCassandra | undefined>;
    declare public readonly citus: pulumi.Output<outputs.ResourceCitus | undefined>;
    declare public readonly clickHouseHttp: pulumi.Output<outputs.ResourceClickHouseHttp | undefined>;
    declare public readonly clickHouseMySql: pulumi.Output<outputs.ResourceClickHouseMySql | undefined>;
    declare public readonly clickHouseTcp: pulumi.Output<outputs.ResourceClickHouseTcp | undefined>;
    declare public readonly clustrix: pulumi.Output<outputs.ResourceClustrix | undefined>;
    declare public readonly cockroach: pulumi.Output<outputs.ResourceCockroach | undefined>;
    declare public readonly couchbaseDatabase: pulumi.Output<outputs.ResourceCouchbaseDatabase | undefined>;
    declare public readonly couchbaseWebUi: pulumi.Output<outputs.ResourceCouchbaseWebUi | undefined>;
    declare public readonly db2I: pulumi.Output<outputs.ResourceDb2I | undefined>;
    declare public readonly db2Luw: pulumi.Output<outputs.ResourceDb2Luw | undefined>;
    declare public readonly documentDbHost: pulumi.Output<outputs.ResourceDocumentDbHost | undefined>;
    declare public readonly documentDbHostIam: pulumi.Output<outputs.ResourceDocumentDbHostIam | undefined>;
    declare public readonly documentDbReplicaSet: pulumi.Output<outputs.ResourceDocumentDbReplicaSet | undefined>;
    /**
     * DocumentDBReplicaSetIAM is currently unstable, and its API may change, or it may be removed, without a major version bump.
     */
    declare public readonly documentDbReplicaSetIam: pulumi.Output<outputs.ResourceDocumentDbReplicaSetIam | undefined>;
    declare public readonly druid: pulumi.Output<outputs.ResourceDruid | undefined>;
    declare public readonly dynamoDb: pulumi.Output<outputs.ResourceDynamoDb | undefined>;
    declare public readonly dynamoDbiam: pulumi.Output<outputs.ResourceDynamoDbiam | undefined>;
    declare public readonly elastic: pulumi.Output<outputs.ResourceElastic | undefined>;
    declare public readonly elasticacheRedis: pulumi.Output<outputs.ResourceElasticacheRedis | undefined>;
    declare public readonly entraId: pulumi.Output<outputs.ResourceEntraId | undefined>;
    declare public readonly gcp: pulumi.Output<outputs.ResourceGcp | undefined>;
    declare public readonly gcpConsole: pulumi.Output<outputs.ResourceGcpConsole | undefined>;
    declare public readonly gcpwif: pulumi.Output<outputs.ResourceGcpwif | undefined>;
    declare public readonly googleGke: pulumi.Output<outputs.ResourceGoogleGke | undefined>;
    /**
     * @deprecated google_gke_user_impersonation is deprecated, see docs for more info
     */
    declare public readonly googleGkeUserImpersonation: pulumi.Output<outputs.ResourceGoogleGkeUserImpersonation | undefined>;
    declare public readonly greenplum: pulumi.Output<outputs.ResourceGreenplum | undefined>;
    declare public readonly httpAuth: pulumi.Output<outputs.ResourceHttpAuth | undefined>;
    declare public readonly httpBasicAuth: pulumi.Output<outputs.ResourceHttpBasicAuth | undefined>;
    declare public readonly httpNoAuth: pulumi.Output<outputs.ResourceHttpNoAuth | undefined>;
    declare public readonly kubernetes: pulumi.Output<outputs.ResourceKubernetes | undefined>;
    /**
     * KubernetesBasicAuth is currently unstable, and its API may change, or it may be removed, without a major version bump.
     */
    declare public readonly kubernetesBasicAuth: pulumi.Output<outputs.ResourceKubernetesBasicAuth | undefined>;
    declare public readonly kubernetesPodIdentity: pulumi.Output<outputs.ResourceKubernetesPodIdentity | undefined>;
    declare public readonly kubernetesServiceAccount: pulumi.Output<outputs.ResourceKubernetesServiceAccount | undefined>;
    /**
     * @deprecated kubernetes_service_account_user_impersonation is deprecated, see docs for more info
     */
    declare public readonly kubernetesServiceAccountUserImpersonation: pulumi.Output<outputs.ResourceKubernetesServiceAccountUserImpersonation | undefined>;
    /**
     * @deprecated kubernetes_user_impersonation is deprecated, see docs for more info
     */
    declare public readonly kubernetesUserImpersonation: pulumi.Output<outputs.ResourceKubernetesUserImpersonation | undefined>;
    declare public readonly maria: pulumi.Output<outputs.ResourceMaria | undefined>;
    declare public readonly memcached: pulumi.Output<outputs.ResourceMemcached | undefined>;
    declare public readonly memsql: pulumi.Output<outputs.ResourceMemsql | undefined>;
    declare public readonly mongoHost: pulumi.Output<outputs.ResourceMongoHost | undefined>;
    /**
     * MongoLegacyHost is currently unstable, and its API may change, or it may be removed, without a major version bump.
     */
    declare public readonly mongoLegacyHost: pulumi.Output<outputs.ResourceMongoLegacyHost | undefined>;
    /**
     * MongoLegacyReplicaset is currently unstable, and its API may change, or it may be removed, without a major version bump.
     */
    declare public readonly mongoLegacyReplicaset: pulumi.Output<outputs.ResourceMongoLegacyReplicaset | undefined>;
    declare public readonly mongoReplicaSet: pulumi.Output<outputs.ResourceMongoReplicaSet | undefined>;
    declare public readonly mongoShardedCluster: pulumi.Output<outputs.ResourceMongoShardedCluster | undefined>;
    /**
     * MTLSMysql is currently unstable, and its API may change, or it may be removed, without a major version bump.
     */
    declare public readonly mtlsMysql: pulumi.Output<outputs.ResourceMtlsMysql | undefined>;
    declare public readonly mtlsPostgres: pulumi.Output<outputs.ResourceMtlsPostgres | undefined>;
    declare public readonly mysql: pulumi.Output<outputs.ResourceMysql | undefined>;
    declare public readonly neptune: pulumi.Output<outputs.ResourceNeptune | undefined>;
    declare public readonly neptuneIam: pulumi.Output<outputs.ResourceNeptuneIam | undefined>;
    declare public readonly oracle: pulumi.Output<outputs.ResourceOracle | undefined>;
    declare public readonly oracleNne: pulumi.Output<outputs.ResourceOracleNne | undefined>;
    declare public readonly postgres: pulumi.Output<outputs.ResourcePostgres | undefined>;
    declare public readonly presto: pulumi.Output<outputs.ResourcePresto | undefined>;
    declare public readonly rabbitmqAmqp091: pulumi.Output<outputs.ResourceRabbitmqAmqp091 | undefined>;
    declare public readonly rawTcp: pulumi.Output<outputs.ResourceRawTcp | undefined>;
    declare public readonly rdp: pulumi.Output<outputs.ResourceRdp | undefined>;
    declare public readonly rdpCert: pulumi.Output<outputs.ResourceRdpCert | undefined>;
    declare public readonly rdsPostgresIam: pulumi.Output<outputs.ResourceRdsPostgresIam | undefined>;
    declare public readonly redis: pulumi.Output<outputs.ResourceRedis | undefined>;
    declare public readonly redisCluster: pulumi.Output<outputs.ResourceRedisCluster | undefined>;
    declare public readonly redshift: pulumi.Output<outputs.ResourceRedshift | undefined>;
    declare public readonly redshiftIam: pulumi.Output<outputs.ResourceRedshiftIam | undefined>;
    declare public readonly redshiftServerlessIam: pulumi.Output<outputs.ResourceRedshiftServerlessIam | undefined>;
    declare public readonly singleStore: pulumi.Output<outputs.ResourceSingleStore | undefined>;
    declare public readonly snowflake: pulumi.Output<outputs.ResourceSnowflake | undefined>;
    declare public readonly snowsight: pulumi.Output<outputs.ResourceSnowsight | undefined>;
    declare public readonly sqlServer: pulumi.Output<outputs.ResourceSqlServer | undefined>;
    declare public readonly sqlServerAzureAd: pulumi.Output<outputs.ResourceSqlServerAzureAd | undefined>;
    declare public readonly sqlServerKerberosAd: pulumi.Output<outputs.ResourceSqlServerKerberosAd | undefined>;
    declare public readonly ssh: pulumi.Output<outputs.ResourceSsh | undefined>;
    declare public readonly sshCert: pulumi.Output<outputs.ResourceSshCert | undefined>;
    declare public readonly sshCustomerKey: pulumi.Output<outputs.ResourceSshCustomerKey | undefined>;
    declare public readonly sshPassword: pulumi.Output<outputs.ResourceSshPassword | undefined>;
    declare public readonly sybase: pulumi.Output<outputs.ResourceSybase | undefined>;
    declare public readonly sybaseIq: pulumi.Output<outputs.ResourceSybaseIq | undefined>;
    declare public readonly teradata: pulumi.Output<outputs.ResourceTeradata | undefined>;
    declare public readonly trino: pulumi.Output<outputs.ResourceTrino | undefined>;
    declare public readonly vertica: pulumi.Output<outputs.ResourceVertica | undefined>;

    /**
     * Create a Resource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ResourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResourceArgs | ResourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResourceState | undefined;
            resourceInputs["aerospike"] = state?.aerospike;
            resourceInputs["aks"] = state?.aks;
            resourceInputs["aksBasicAuth"] = state?.aksBasicAuth;
            resourceInputs["aksServiceAccount"] = state?.aksServiceAccount;
            resourceInputs["aksServiceAccountUserImpersonation"] = state?.aksServiceAccountUserImpersonation;
            resourceInputs["aksUserImpersonation"] = state?.aksUserImpersonation;
            resourceInputs["amazonEks"] = state?.amazonEks;
            resourceInputs["amazonEksInstanceProfile"] = state?.amazonEksInstanceProfile;
            resourceInputs["amazonEksInstanceProfileUserImpersonation"] = state?.amazonEksInstanceProfileUserImpersonation;
            resourceInputs["amazonEksUserImpersonation"] = state?.amazonEksUserImpersonation;
            resourceInputs["amazonEs"] = state?.amazonEs;
            resourceInputs["amazonEsiam"] = state?.amazonEsiam;
            resourceInputs["amazonmqAmqp"] = state?.amazonmqAmqp;
            resourceInputs["amazonmqAmqp091"] = state?.amazonmqAmqp091;
            resourceInputs["athena"] = state?.athena;
            resourceInputs["athenaIam"] = state?.athenaIam;
            resourceInputs["auroraMysql"] = state?.auroraMysql;
            resourceInputs["auroraMysqlIam"] = state?.auroraMysqlIam;
            resourceInputs["auroraPostgres"] = state?.auroraPostgres;
            resourceInputs["auroraPostgresIam"] = state?.auroraPostgresIam;
            resourceInputs["aws"] = state?.aws;
            resourceInputs["awsConsole"] = state?.awsConsole;
            resourceInputs["awsConsoleStaticKeyPair"] = state?.awsConsoleStaticKeyPair;
            resourceInputs["awsInstanceProfile"] = state?.awsInstanceProfile;
            resourceInputs["azure"] = state?.azure;
            resourceInputs["azureCertificate"] = state?.azureCertificate;
            resourceInputs["azureMysql"] = state?.azureMysql;
            resourceInputs["azureMysqlManagedIdentity"] = state?.azureMysqlManagedIdentity;
            resourceInputs["azurePostgres"] = state?.azurePostgres;
            resourceInputs["azurePostgresManagedIdentity"] = state?.azurePostgresManagedIdentity;
            resourceInputs["bigQuery"] = state?.bigQuery;
            resourceInputs["cassandra"] = state?.cassandra;
            resourceInputs["citus"] = state?.citus;
            resourceInputs["clickHouseHttp"] = state?.clickHouseHttp;
            resourceInputs["clickHouseMySql"] = state?.clickHouseMySql;
            resourceInputs["clickHouseTcp"] = state?.clickHouseTcp;
            resourceInputs["clustrix"] = state?.clustrix;
            resourceInputs["cockroach"] = state?.cockroach;
            resourceInputs["couchbaseDatabase"] = state?.couchbaseDatabase;
            resourceInputs["couchbaseWebUi"] = state?.couchbaseWebUi;
            resourceInputs["db2I"] = state?.db2I;
            resourceInputs["db2Luw"] = state?.db2Luw;
            resourceInputs["documentDbHost"] = state?.documentDbHost;
            resourceInputs["documentDbHostIam"] = state?.documentDbHostIam;
            resourceInputs["documentDbReplicaSet"] = state?.documentDbReplicaSet;
            resourceInputs["documentDbReplicaSetIam"] = state?.documentDbReplicaSetIam;
            resourceInputs["druid"] = state?.druid;
            resourceInputs["dynamoDb"] = state?.dynamoDb;
            resourceInputs["dynamoDbiam"] = state?.dynamoDbiam;
            resourceInputs["elastic"] = state?.elastic;
            resourceInputs["elasticacheRedis"] = state?.elasticacheRedis;
            resourceInputs["entraId"] = state?.entraId;
            resourceInputs["gcp"] = state?.gcp;
            resourceInputs["gcpConsole"] = state?.gcpConsole;
            resourceInputs["gcpwif"] = state?.gcpwif;
            resourceInputs["googleGke"] = state?.googleGke;
            resourceInputs["googleGkeUserImpersonation"] = state?.googleGkeUserImpersonation;
            resourceInputs["greenplum"] = state?.greenplum;
            resourceInputs["httpAuth"] = state?.httpAuth;
            resourceInputs["httpBasicAuth"] = state?.httpBasicAuth;
            resourceInputs["httpNoAuth"] = state?.httpNoAuth;
            resourceInputs["kubernetes"] = state?.kubernetes;
            resourceInputs["kubernetesBasicAuth"] = state?.kubernetesBasicAuth;
            resourceInputs["kubernetesPodIdentity"] = state?.kubernetesPodIdentity;
            resourceInputs["kubernetesServiceAccount"] = state?.kubernetesServiceAccount;
            resourceInputs["kubernetesServiceAccountUserImpersonation"] = state?.kubernetesServiceAccountUserImpersonation;
            resourceInputs["kubernetesUserImpersonation"] = state?.kubernetesUserImpersonation;
            resourceInputs["maria"] = state?.maria;
            resourceInputs["memcached"] = state?.memcached;
            resourceInputs["memsql"] = state?.memsql;
            resourceInputs["mongoHost"] = state?.mongoHost;
            resourceInputs["mongoLegacyHost"] = state?.mongoLegacyHost;
            resourceInputs["mongoLegacyReplicaset"] = state?.mongoLegacyReplicaset;
            resourceInputs["mongoReplicaSet"] = state?.mongoReplicaSet;
            resourceInputs["mongoShardedCluster"] = state?.mongoShardedCluster;
            resourceInputs["mtlsMysql"] = state?.mtlsMysql;
            resourceInputs["mtlsPostgres"] = state?.mtlsPostgres;
            resourceInputs["mysql"] = state?.mysql;
            resourceInputs["neptune"] = state?.neptune;
            resourceInputs["neptuneIam"] = state?.neptuneIam;
            resourceInputs["oracle"] = state?.oracle;
            resourceInputs["oracleNne"] = state?.oracleNne;
            resourceInputs["postgres"] = state?.postgres;
            resourceInputs["presto"] = state?.presto;
            resourceInputs["rabbitmqAmqp091"] = state?.rabbitmqAmqp091;
            resourceInputs["rawTcp"] = state?.rawTcp;
            resourceInputs["rdp"] = state?.rdp;
            resourceInputs["rdpCert"] = state?.rdpCert;
            resourceInputs["rdsPostgresIam"] = state?.rdsPostgresIam;
            resourceInputs["redis"] = state?.redis;
            resourceInputs["redisCluster"] = state?.redisCluster;
            resourceInputs["redshift"] = state?.redshift;
            resourceInputs["redshiftIam"] = state?.redshiftIam;
            resourceInputs["redshiftServerlessIam"] = state?.redshiftServerlessIam;
            resourceInputs["singleStore"] = state?.singleStore;
            resourceInputs["snowflake"] = state?.snowflake;
            resourceInputs["snowsight"] = state?.snowsight;
            resourceInputs["sqlServer"] = state?.sqlServer;
            resourceInputs["sqlServerAzureAd"] = state?.sqlServerAzureAd;
            resourceInputs["sqlServerKerberosAd"] = state?.sqlServerKerberosAd;
            resourceInputs["ssh"] = state?.ssh;
            resourceInputs["sshCert"] = state?.sshCert;
            resourceInputs["sshCustomerKey"] = state?.sshCustomerKey;
            resourceInputs["sshPassword"] = state?.sshPassword;
            resourceInputs["sybase"] = state?.sybase;
            resourceInputs["sybaseIq"] = state?.sybaseIq;
            resourceInputs["teradata"] = state?.teradata;
            resourceInputs["trino"] = state?.trino;
            resourceInputs["vertica"] = state?.vertica;
        } else {
            const args = argsOrState as ResourceArgs | undefined;
            resourceInputs["aerospike"] = args?.aerospike;
            resourceInputs["aks"] = args?.aks;
            resourceInputs["aksBasicAuth"] = args?.aksBasicAuth;
            resourceInputs["aksServiceAccount"] = args?.aksServiceAccount;
            resourceInputs["aksServiceAccountUserImpersonation"] = args?.aksServiceAccountUserImpersonation;
            resourceInputs["aksUserImpersonation"] = args?.aksUserImpersonation;
            resourceInputs["amazonEks"] = args?.amazonEks;
            resourceInputs["amazonEksInstanceProfile"] = args?.amazonEksInstanceProfile;
            resourceInputs["amazonEksInstanceProfileUserImpersonation"] = args?.amazonEksInstanceProfileUserImpersonation;
            resourceInputs["amazonEksUserImpersonation"] = args?.amazonEksUserImpersonation;
            resourceInputs["amazonEs"] = args?.amazonEs;
            resourceInputs["amazonEsiam"] = args?.amazonEsiam;
            resourceInputs["amazonmqAmqp"] = args?.amazonmqAmqp;
            resourceInputs["amazonmqAmqp091"] = args?.amazonmqAmqp091;
            resourceInputs["athena"] = args?.athena;
            resourceInputs["athenaIam"] = args?.athenaIam;
            resourceInputs["auroraMysql"] = args?.auroraMysql;
            resourceInputs["auroraMysqlIam"] = args?.auroraMysqlIam;
            resourceInputs["auroraPostgres"] = args?.auroraPostgres;
            resourceInputs["auroraPostgresIam"] = args?.auroraPostgresIam;
            resourceInputs["aws"] = args?.aws;
            resourceInputs["awsConsole"] = args?.awsConsole;
            resourceInputs["awsConsoleStaticKeyPair"] = args?.awsConsoleStaticKeyPair;
            resourceInputs["awsInstanceProfile"] = args?.awsInstanceProfile;
            resourceInputs["azure"] = args?.azure;
            resourceInputs["azureCertificate"] = args?.azureCertificate;
            resourceInputs["azureMysql"] = args?.azureMysql;
            resourceInputs["azureMysqlManagedIdentity"] = args?.azureMysqlManagedIdentity;
            resourceInputs["azurePostgres"] = args?.azurePostgres;
            resourceInputs["azurePostgresManagedIdentity"] = args?.azurePostgresManagedIdentity;
            resourceInputs["bigQuery"] = args?.bigQuery;
            resourceInputs["cassandra"] = args?.cassandra;
            resourceInputs["citus"] = args?.citus;
            resourceInputs["clickHouseHttp"] = args?.clickHouseHttp;
            resourceInputs["clickHouseMySql"] = args?.clickHouseMySql;
            resourceInputs["clickHouseTcp"] = args?.clickHouseTcp;
            resourceInputs["clustrix"] = args?.clustrix;
            resourceInputs["cockroach"] = args?.cockroach;
            resourceInputs["couchbaseDatabase"] = args?.couchbaseDatabase;
            resourceInputs["couchbaseWebUi"] = args?.couchbaseWebUi;
            resourceInputs["db2I"] = args?.db2I;
            resourceInputs["db2Luw"] = args?.db2Luw;
            resourceInputs["documentDbHost"] = args?.documentDbHost;
            resourceInputs["documentDbHostIam"] = args?.documentDbHostIam;
            resourceInputs["documentDbReplicaSet"] = args?.documentDbReplicaSet;
            resourceInputs["documentDbReplicaSetIam"] = args?.documentDbReplicaSetIam;
            resourceInputs["druid"] = args?.druid;
            resourceInputs["dynamoDb"] = args?.dynamoDb;
            resourceInputs["dynamoDbiam"] = args?.dynamoDbiam;
            resourceInputs["elastic"] = args?.elastic;
            resourceInputs["elasticacheRedis"] = args?.elasticacheRedis;
            resourceInputs["entraId"] = args?.entraId;
            resourceInputs["gcp"] = args?.gcp;
            resourceInputs["gcpConsole"] = args?.gcpConsole;
            resourceInputs["gcpwif"] = args?.gcpwif;
            resourceInputs["googleGke"] = args?.googleGke;
            resourceInputs["googleGkeUserImpersonation"] = args?.googleGkeUserImpersonation;
            resourceInputs["greenplum"] = args?.greenplum;
            resourceInputs["httpAuth"] = args?.httpAuth;
            resourceInputs["httpBasicAuth"] = args?.httpBasicAuth;
            resourceInputs["httpNoAuth"] = args?.httpNoAuth;
            resourceInputs["kubernetes"] = args?.kubernetes;
            resourceInputs["kubernetesBasicAuth"] = args?.kubernetesBasicAuth;
            resourceInputs["kubernetesPodIdentity"] = args?.kubernetesPodIdentity;
            resourceInputs["kubernetesServiceAccount"] = args?.kubernetesServiceAccount;
            resourceInputs["kubernetesServiceAccountUserImpersonation"] = args?.kubernetesServiceAccountUserImpersonation;
            resourceInputs["kubernetesUserImpersonation"] = args?.kubernetesUserImpersonation;
            resourceInputs["maria"] = args?.maria;
            resourceInputs["memcached"] = args?.memcached;
            resourceInputs["memsql"] = args?.memsql;
            resourceInputs["mongoHost"] = args?.mongoHost;
            resourceInputs["mongoLegacyHost"] = args?.mongoLegacyHost;
            resourceInputs["mongoLegacyReplicaset"] = args?.mongoLegacyReplicaset;
            resourceInputs["mongoReplicaSet"] = args?.mongoReplicaSet;
            resourceInputs["mongoShardedCluster"] = args?.mongoShardedCluster;
            resourceInputs["mtlsMysql"] = args?.mtlsMysql;
            resourceInputs["mtlsPostgres"] = args?.mtlsPostgres;
            resourceInputs["mysql"] = args?.mysql;
            resourceInputs["neptune"] = args?.neptune;
            resourceInputs["neptuneIam"] = args?.neptuneIam;
            resourceInputs["oracle"] = args?.oracle;
            resourceInputs["oracleNne"] = args?.oracleNne;
            resourceInputs["postgres"] = args?.postgres;
            resourceInputs["presto"] = args?.presto;
            resourceInputs["rabbitmqAmqp091"] = args?.rabbitmqAmqp091;
            resourceInputs["rawTcp"] = args?.rawTcp;
            resourceInputs["rdp"] = args?.rdp;
            resourceInputs["rdpCert"] = args?.rdpCert;
            resourceInputs["rdsPostgresIam"] = args?.rdsPostgresIam;
            resourceInputs["redis"] = args?.redis;
            resourceInputs["redisCluster"] = args?.redisCluster;
            resourceInputs["redshift"] = args?.redshift;
            resourceInputs["redshiftIam"] = args?.redshiftIam;
            resourceInputs["redshiftServerlessIam"] = args?.redshiftServerlessIam;
            resourceInputs["singleStore"] = args?.singleStore;
            resourceInputs["snowflake"] = args?.snowflake;
            resourceInputs["snowsight"] = args?.snowsight;
            resourceInputs["sqlServer"] = args?.sqlServer;
            resourceInputs["sqlServerAzureAd"] = args?.sqlServerAzureAd;
            resourceInputs["sqlServerKerberosAd"] = args?.sqlServerKerberosAd;
            resourceInputs["ssh"] = args?.ssh;
            resourceInputs["sshCert"] = args?.sshCert;
            resourceInputs["sshCustomerKey"] = args?.sshCustomerKey;
            resourceInputs["sshPassword"] = args?.sshPassword;
            resourceInputs["sybase"] = args?.sybase;
            resourceInputs["sybaseIq"] = args?.sybaseIq;
            resourceInputs["teradata"] = args?.teradata;
            resourceInputs["trino"] = args?.trino;
            resourceInputs["vertica"] = args?.vertica;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Resource.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Resource resources.
 */
export interface ResourceState {
    aerospike?: pulumi.Input<inputs.ResourceAerospike>;
    aks?: pulumi.Input<inputs.ResourceAks>;
    /**
     * AKSBasicAuth is currently unstable, and its API may change, or it may be removed, without a major version bump.
     */
    aksBasicAuth?: pulumi.Input<inputs.ResourceAksBasicAuth>;
    aksServiceAccount?: pulumi.Input<inputs.ResourceAksServiceAccount>;
    /**
     * @deprecated aks_service_account_user_impersonation is deprecated, see docs for more info
     */
    aksServiceAccountUserImpersonation?: pulumi.Input<inputs.ResourceAksServiceAccountUserImpersonation>;
    /**
     * @deprecated aks_user_impersonation is deprecated, see docs for more info
     */
    aksUserImpersonation?: pulumi.Input<inputs.ResourceAksUserImpersonation>;
    amazonEks?: pulumi.Input<inputs.ResourceAmazonEks>;
    amazonEksInstanceProfile?: pulumi.Input<inputs.ResourceAmazonEksInstanceProfile>;
    /**
     * @deprecated amazon_eks_instance_profile_user_impersonation is deprecated, see docs for more info
     */
    amazonEksInstanceProfileUserImpersonation?: pulumi.Input<inputs.ResourceAmazonEksInstanceProfileUserImpersonation>;
    /**
     * @deprecated amazon_eks_user_impersonation is deprecated, see docs for more info
     */
    amazonEksUserImpersonation?: pulumi.Input<inputs.ResourceAmazonEksUserImpersonation>;
    amazonEs?: pulumi.Input<inputs.ResourceAmazonEs>;
    amazonEsiam?: pulumi.Input<inputs.ResourceAmazonEsiam>;
    /**
     * AMQP is currently unstable, and its API may change, or it may be removed, without a major version bump.
     */
    amazonmqAmqp?: pulumi.Input<inputs.ResourceAmazonmqAmqp>;
    amazonmqAmqp091?: pulumi.Input<inputs.ResourceAmazonmqAmqp091>;
    athena?: pulumi.Input<inputs.ResourceAthena>;
    athenaIam?: pulumi.Input<inputs.ResourceAthenaIam>;
    auroraMysql?: pulumi.Input<inputs.ResourceAuroraMysql>;
    auroraMysqlIam?: pulumi.Input<inputs.ResourceAuroraMysqlIam>;
    auroraPostgres?: pulumi.Input<inputs.ResourceAuroraPostgres>;
    auroraPostgresIam?: pulumi.Input<inputs.ResourceAuroraPostgresIam>;
    aws?: pulumi.Input<inputs.ResourceAws>;
    awsConsole?: pulumi.Input<inputs.ResourceAwsConsole>;
    awsConsoleStaticKeyPair?: pulumi.Input<inputs.ResourceAwsConsoleStaticKeyPair>;
    awsInstanceProfile?: pulumi.Input<inputs.ResourceAwsInstanceProfile>;
    azure?: pulumi.Input<inputs.ResourceAzure>;
    azureCertificate?: pulumi.Input<inputs.ResourceAzureCertificate>;
    azureMysql?: pulumi.Input<inputs.ResourceAzureMysql>;
    azureMysqlManagedIdentity?: pulumi.Input<inputs.ResourceAzureMysqlManagedIdentity>;
    azurePostgres?: pulumi.Input<inputs.ResourceAzurePostgres>;
    azurePostgresManagedIdentity?: pulumi.Input<inputs.ResourceAzurePostgresManagedIdentity>;
    bigQuery?: pulumi.Input<inputs.ResourceBigQuery>;
    cassandra?: pulumi.Input<inputs.ResourceCassandra>;
    citus?: pulumi.Input<inputs.ResourceCitus>;
    clickHouseHttp?: pulumi.Input<inputs.ResourceClickHouseHttp>;
    clickHouseMySql?: pulumi.Input<inputs.ResourceClickHouseMySql>;
    clickHouseTcp?: pulumi.Input<inputs.ResourceClickHouseTcp>;
    clustrix?: pulumi.Input<inputs.ResourceClustrix>;
    cockroach?: pulumi.Input<inputs.ResourceCockroach>;
    couchbaseDatabase?: pulumi.Input<inputs.ResourceCouchbaseDatabase>;
    couchbaseWebUi?: pulumi.Input<inputs.ResourceCouchbaseWebUi>;
    db2I?: pulumi.Input<inputs.ResourceDb2I>;
    db2Luw?: pulumi.Input<inputs.ResourceDb2Luw>;
    documentDbHost?: pulumi.Input<inputs.ResourceDocumentDbHost>;
    documentDbHostIam?: pulumi.Input<inputs.ResourceDocumentDbHostIam>;
    documentDbReplicaSet?: pulumi.Input<inputs.ResourceDocumentDbReplicaSet>;
    /**
     * DocumentDBReplicaSetIAM is currently unstable, and its API may change, or it may be removed, without a major version bump.
     */
    documentDbReplicaSetIam?: pulumi.Input<inputs.ResourceDocumentDbReplicaSetIam>;
    druid?: pulumi.Input<inputs.ResourceDruid>;
    dynamoDb?: pulumi.Input<inputs.ResourceDynamoDb>;
    dynamoDbiam?: pulumi.Input<inputs.ResourceDynamoDbiam>;
    elastic?: pulumi.Input<inputs.ResourceElastic>;
    elasticacheRedis?: pulumi.Input<inputs.ResourceElasticacheRedis>;
    entraId?: pulumi.Input<inputs.ResourceEntraId>;
    gcp?: pulumi.Input<inputs.ResourceGcp>;
    gcpConsole?: pulumi.Input<inputs.ResourceGcpConsole>;
    gcpwif?: pulumi.Input<inputs.ResourceGcpwif>;
    googleGke?: pulumi.Input<inputs.ResourceGoogleGke>;
    /**
     * @deprecated google_gke_user_impersonation is deprecated, see docs for more info
     */
    googleGkeUserImpersonation?: pulumi.Input<inputs.ResourceGoogleGkeUserImpersonation>;
    greenplum?: pulumi.Input<inputs.ResourceGreenplum>;
    httpAuth?: pulumi.Input<inputs.ResourceHttpAuth>;
    httpBasicAuth?: pulumi.Input<inputs.ResourceHttpBasicAuth>;
    httpNoAuth?: pulumi.Input<inputs.ResourceHttpNoAuth>;
    kubernetes?: pulumi.Input<inputs.ResourceKubernetes>;
    /**
     * KubernetesBasicAuth is currently unstable, and its API may change, or it may be removed, without a major version bump.
     */
    kubernetesBasicAuth?: pulumi.Input<inputs.ResourceKubernetesBasicAuth>;
    kubernetesPodIdentity?: pulumi.Input<inputs.ResourceKubernetesPodIdentity>;
    kubernetesServiceAccount?: pulumi.Input<inputs.ResourceKubernetesServiceAccount>;
    /**
     * @deprecated kubernetes_service_account_user_impersonation is deprecated, see docs for more info
     */
    kubernetesServiceAccountUserImpersonation?: pulumi.Input<inputs.ResourceKubernetesServiceAccountUserImpersonation>;
    /**
     * @deprecated kubernetes_user_impersonation is deprecated, see docs for more info
     */
    kubernetesUserImpersonation?: pulumi.Input<inputs.ResourceKubernetesUserImpersonation>;
    maria?: pulumi.Input<inputs.ResourceMaria>;
    memcached?: pulumi.Input<inputs.ResourceMemcached>;
    memsql?: pulumi.Input<inputs.ResourceMemsql>;
    mongoHost?: pulumi.Input<inputs.ResourceMongoHost>;
    /**
     * MongoLegacyHost is currently unstable, and its API may change, or it may be removed, without a major version bump.
     */
    mongoLegacyHost?: pulumi.Input<inputs.ResourceMongoLegacyHost>;
    /**
     * MongoLegacyReplicaset is currently unstable, and its API may change, or it may be removed, without a major version bump.
     */
    mongoLegacyReplicaset?: pulumi.Input<inputs.ResourceMongoLegacyReplicaset>;
    mongoReplicaSet?: pulumi.Input<inputs.ResourceMongoReplicaSet>;
    mongoShardedCluster?: pulumi.Input<inputs.ResourceMongoShardedCluster>;
    /**
     * MTLSMysql is currently unstable, and its API may change, or it may be removed, without a major version bump.
     */
    mtlsMysql?: pulumi.Input<inputs.ResourceMtlsMysql>;
    mtlsPostgres?: pulumi.Input<inputs.ResourceMtlsPostgres>;
    mysql?: pulumi.Input<inputs.ResourceMysql>;
    neptune?: pulumi.Input<inputs.ResourceNeptune>;
    neptuneIam?: pulumi.Input<inputs.ResourceNeptuneIam>;
    oracle?: pulumi.Input<inputs.ResourceOracle>;
    oracleNne?: pulumi.Input<inputs.ResourceOracleNne>;
    postgres?: pulumi.Input<inputs.ResourcePostgres>;
    presto?: pulumi.Input<inputs.ResourcePresto>;
    rabbitmqAmqp091?: pulumi.Input<inputs.ResourceRabbitmqAmqp091>;
    rawTcp?: pulumi.Input<inputs.ResourceRawTcp>;
    rdp?: pulumi.Input<inputs.ResourceRdp>;
    rdpCert?: pulumi.Input<inputs.ResourceRdpCert>;
    rdsPostgresIam?: pulumi.Input<inputs.ResourceRdsPostgresIam>;
    redis?: pulumi.Input<inputs.ResourceRedis>;
    redisCluster?: pulumi.Input<inputs.ResourceRedisCluster>;
    redshift?: pulumi.Input<inputs.ResourceRedshift>;
    redshiftIam?: pulumi.Input<inputs.ResourceRedshiftIam>;
    redshiftServerlessIam?: pulumi.Input<inputs.ResourceRedshiftServerlessIam>;
    singleStore?: pulumi.Input<inputs.ResourceSingleStore>;
    snowflake?: pulumi.Input<inputs.ResourceSnowflake>;
    snowsight?: pulumi.Input<inputs.ResourceSnowsight>;
    sqlServer?: pulumi.Input<inputs.ResourceSqlServer>;
    sqlServerAzureAd?: pulumi.Input<inputs.ResourceSqlServerAzureAd>;
    sqlServerKerberosAd?: pulumi.Input<inputs.ResourceSqlServerKerberosAd>;
    ssh?: pulumi.Input<inputs.ResourceSsh>;
    sshCert?: pulumi.Input<inputs.ResourceSshCert>;
    sshCustomerKey?: pulumi.Input<inputs.ResourceSshCustomerKey>;
    sshPassword?: pulumi.Input<inputs.ResourceSshPassword>;
    sybase?: pulumi.Input<inputs.ResourceSybase>;
    sybaseIq?: pulumi.Input<inputs.ResourceSybaseIq>;
    teradata?: pulumi.Input<inputs.ResourceTeradata>;
    trino?: pulumi.Input<inputs.ResourceTrino>;
    vertica?: pulumi.Input<inputs.ResourceVertica>;
}

/**
 * The set of arguments for constructing a Resource resource.
 */
export interface ResourceArgs {
    aerospike?: pulumi.Input<inputs.ResourceAerospike>;
    aks?: pulumi.Input<inputs.ResourceAks>;
    /**
     * AKSBasicAuth is currently unstable, and its API may change, or it may be removed, without a major version bump.
     */
    aksBasicAuth?: pulumi.Input<inputs.ResourceAksBasicAuth>;
    aksServiceAccount?: pulumi.Input<inputs.ResourceAksServiceAccount>;
    /**
     * @deprecated aks_service_account_user_impersonation is deprecated, see docs for more info
     */
    aksServiceAccountUserImpersonation?: pulumi.Input<inputs.ResourceAksServiceAccountUserImpersonation>;
    /**
     * @deprecated aks_user_impersonation is deprecated, see docs for more info
     */
    aksUserImpersonation?: pulumi.Input<inputs.ResourceAksUserImpersonation>;
    amazonEks?: pulumi.Input<inputs.ResourceAmazonEks>;
    amazonEksInstanceProfile?: pulumi.Input<inputs.ResourceAmazonEksInstanceProfile>;
    /**
     * @deprecated amazon_eks_instance_profile_user_impersonation is deprecated, see docs for more info
     */
    amazonEksInstanceProfileUserImpersonation?: pulumi.Input<inputs.ResourceAmazonEksInstanceProfileUserImpersonation>;
    /**
     * @deprecated amazon_eks_user_impersonation is deprecated, see docs for more info
     */
    amazonEksUserImpersonation?: pulumi.Input<inputs.ResourceAmazonEksUserImpersonation>;
    amazonEs?: pulumi.Input<inputs.ResourceAmazonEs>;
    amazonEsiam?: pulumi.Input<inputs.ResourceAmazonEsiam>;
    /**
     * AMQP is currently unstable, and its API may change, or it may be removed, without a major version bump.
     */
    amazonmqAmqp?: pulumi.Input<inputs.ResourceAmazonmqAmqp>;
    amazonmqAmqp091?: pulumi.Input<inputs.ResourceAmazonmqAmqp091>;
    athena?: pulumi.Input<inputs.ResourceAthena>;
    athenaIam?: pulumi.Input<inputs.ResourceAthenaIam>;
    auroraMysql?: pulumi.Input<inputs.ResourceAuroraMysql>;
    auroraMysqlIam?: pulumi.Input<inputs.ResourceAuroraMysqlIam>;
    auroraPostgres?: pulumi.Input<inputs.ResourceAuroraPostgres>;
    auroraPostgresIam?: pulumi.Input<inputs.ResourceAuroraPostgresIam>;
    aws?: pulumi.Input<inputs.ResourceAws>;
    awsConsole?: pulumi.Input<inputs.ResourceAwsConsole>;
    awsConsoleStaticKeyPair?: pulumi.Input<inputs.ResourceAwsConsoleStaticKeyPair>;
    awsInstanceProfile?: pulumi.Input<inputs.ResourceAwsInstanceProfile>;
    azure?: pulumi.Input<inputs.ResourceAzure>;
    azureCertificate?: pulumi.Input<inputs.ResourceAzureCertificate>;
    azureMysql?: pulumi.Input<inputs.ResourceAzureMysql>;
    azureMysqlManagedIdentity?: pulumi.Input<inputs.ResourceAzureMysqlManagedIdentity>;
    azurePostgres?: pulumi.Input<inputs.ResourceAzurePostgres>;
    azurePostgresManagedIdentity?: pulumi.Input<inputs.ResourceAzurePostgresManagedIdentity>;
    bigQuery?: pulumi.Input<inputs.ResourceBigQuery>;
    cassandra?: pulumi.Input<inputs.ResourceCassandra>;
    citus?: pulumi.Input<inputs.ResourceCitus>;
    clickHouseHttp?: pulumi.Input<inputs.ResourceClickHouseHttp>;
    clickHouseMySql?: pulumi.Input<inputs.ResourceClickHouseMySql>;
    clickHouseTcp?: pulumi.Input<inputs.ResourceClickHouseTcp>;
    clustrix?: pulumi.Input<inputs.ResourceClustrix>;
    cockroach?: pulumi.Input<inputs.ResourceCockroach>;
    couchbaseDatabase?: pulumi.Input<inputs.ResourceCouchbaseDatabase>;
    couchbaseWebUi?: pulumi.Input<inputs.ResourceCouchbaseWebUi>;
    db2I?: pulumi.Input<inputs.ResourceDb2I>;
    db2Luw?: pulumi.Input<inputs.ResourceDb2Luw>;
    documentDbHost?: pulumi.Input<inputs.ResourceDocumentDbHost>;
    documentDbHostIam?: pulumi.Input<inputs.ResourceDocumentDbHostIam>;
    documentDbReplicaSet?: pulumi.Input<inputs.ResourceDocumentDbReplicaSet>;
    /**
     * DocumentDBReplicaSetIAM is currently unstable, and its API may change, or it may be removed, without a major version bump.
     */
    documentDbReplicaSetIam?: pulumi.Input<inputs.ResourceDocumentDbReplicaSetIam>;
    druid?: pulumi.Input<inputs.ResourceDruid>;
    dynamoDb?: pulumi.Input<inputs.ResourceDynamoDb>;
    dynamoDbiam?: pulumi.Input<inputs.ResourceDynamoDbiam>;
    elastic?: pulumi.Input<inputs.ResourceElastic>;
    elasticacheRedis?: pulumi.Input<inputs.ResourceElasticacheRedis>;
    entraId?: pulumi.Input<inputs.ResourceEntraId>;
    gcp?: pulumi.Input<inputs.ResourceGcp>;
    gcpConsole?: pulumi.Input<inputs.ResourceGcpConsole>;
    gcpwif?: pulumi.Input<inputs.ResourceGcpwif>;
    googleGke?: pulumi.Input<inputs.ResourceGoogleGke>;
    /**
     * @deprecated google_gke_user_impersonation is deprecated, see docs for more info
     */
    googleGkeUserImpersonation?: pulumi.Input<inputs.ResourceGoogleGkeUserImpersonation>;
    greenplum?: pulumi.Input<inputs.ResourceGreenplum>;
    httpAuth?: pulumi.Input<inputs.ResourceHttpAuth>;
    httpBasicAuth?: pulumi.Input<inputs.ResourceHttpBasicAuth>;
    httpNoAuth?: pulumi.Input<inputs.ResourceHttpNoAuth>;
    kubernetes?: pulumi.Input<inputs.ResourceKubernetes>;
    /**
     * KubernetesBasicAuth is currently unstable, and its API may change, or it may be removed, without a major version bump.
     */
    kubernetesBasicAuth?: pulumi.Input<inputs.ResourceKubernetesBasicAuth>;
    kubernetesPodIdentity?: pulumi.Input<inputs.ResourceKubernetesPodIdentity>;
    kubernetesServiceAccount?: pulumi.Input<inputs.ResourceKubernetesServiceAccount>;
    /**
     * @deprecated kubernetes_service_account_user_impersonation is deprecated, see docs for more info
     */
    kubernetesServiceAccountUserImpersonation?: pulumi.Input<inputs.ResourceKubernetesServiceAccountUserImpersonation>;
    /**
     * @deprecated kubernetes_user_impersonation is deprecated, see docs for more info
     */
    kubernetesUserImpersonation?: pulumi.Input<inputs.ResourceKubernetesUserImpersonation>;
    maria?: pulumi.Input<inputs.ResourceMaria>;
    memcached?: pulumi.Input<inputs.ResourceMemcached>;
    memsql?: pulumi.Input<inputs.ResourceMemsql>;
    mongoHost?: pulumi.Input<inputs.ResourceMongoHost>;
    /**
     * MongoLegacyHost is currently unstable, and its API may change, or it may be removed, without a major version bump.
     */
    mongoLegacyHost?: pulumi.Input<inputs.ResourceMongoLegacyHost>;
    /**
     * MongoLegacyReplicaset is currently unstable, and its API may change, or it may be removed, without a major version bump.
     */
    mongoLegacyReplicaset?: pulumi.Input<inputs.ResourceMongoLegacyReplicaset>;
    mongoReplicaSet?: pulumi.Input<inputs.ResourceMongoReplicaSet>;
    mongoShardedCluster?: pulumi.Input<inputs.ResourceMongoShardedCluster>;
    /**
     * MTLSMysql is currently unstable, and its API may change, or it may be removed, without a major version bump.
     */
    mtlsMysql?: pulumi.Input<inputs.ResourceMtlsMysql>;
    mtlsPostgres?: pulumi.Input<inputs.ResourceMtlsPostgres>;
    mysql?: pulumi.Input<inputs.ResourceMysql>;
    neptune?: pulumi.Input<inputs.ResourceNeptune>;
    neptuneIam?: pulumi.Input<inputs.ResourceNeptuneIam>;
    oracle?: pulumi.Input<inputs.ResourceOracle>;
    oracleNne?: pulumi.Input<inputs.ResourceOracleNne>;
    postgres?: pulumi.Input<inputs.ResourcePostgres>;
    presto?: pulumi.Input<inputs.ResourcePresto>;
    rabbitmqAmqp091?: pulumi.Input<inputs.ResourceRabbitmqAmqp091>;
    rawTcp?: pulumi.Input<inputs.ResourceRawTcp>;
    rdp?: pulumi.Input<inputs.ResourceRdp>;
    rdpCert?: pulumi.Input<inputs.ResourceRdpCert>;
    rdsPostgresIam?: pulumi.Input<inputs.ResourceRdsPostgresIam>;
    redis?: pulumi.Input<inputs.ResourceRedis>;
    redisCluster?: pulumi.Input<inputs.ResourceRedisCluster>;
    redshift?: pulumi.Input<inputs.ResourceRedshift>;
    redshiftIam?: pulumi.Input<inputs.ResourceRedshiftIam>;
    redshiftServerlessIam?: pulumi.Input<inputs.ResourceRedshiftServerlessIam>;
    singleStore?: pulumi.Input<inputs.ResourceSingleStore>;
    snowflake?: pulumi.Input<inputs.ResourceSnowflake>;
    snowsight?: pulumi.Input<inputs.ResourceSnowsight>;
    sqlServer?: pulumi.Input<inputs.ResourceSqlServer>;
    sqlServerAzureAd?: pulumi.Input<inputs.ResourceSqlServerAzureAd>;
    sqlServerKerberosAd?: pulumi.Input<inputs.ResourceSqlServerKerberosAd>;
    ssh?: pulumi.Input<inputs.ResourceSsh>;
    sshCert?: pulumi.Input<inputs.ResourceSshCert>;
    sshCustomerKey?: pulumi.Input<inputs.ResourceSshCustomerKey>;
    sshPassword?: pulumi.Input<inputs.ResourceSshPassword>;
    sybase?: pulumi.Input<inputs.ResourceSybase>;
    sybaseIq?: pulumi.Input<inputs.ResourceSybaseIq>;
    teradata?: pulumi.Input<inputs.ResourceTeradata>;
    trino?: pulumi.Input<inputs.ResourceTrino>;
    vertica?: pulumi.Input<inputs.ResourceVertica>;
}
