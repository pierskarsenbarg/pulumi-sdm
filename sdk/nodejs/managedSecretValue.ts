// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ManagedSecretValue extends pulumi.CustomResource {
    /**
     * Get an existing ManagedSecretValue resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagedSecretValueState, opts?: pulumi.CustomResourceOptions): ManagedSecretValue {
        return new ManagedSecretValue(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdm:index/managedSecretValue:ManagedSecretValue';

    /**
     * Returns true if the given object is an instance of ManagedSecretValue.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagedSecretValue {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedSecretValue.__pulumiType;
    }

    /**
     * encrypted value
     */
    declare public /*out*/ readonly encrypted: pulumi.Output<string>;
    /**
     * secret engine's public key used for encryption in PEM format
     */
    declare public readonly publicKey: pulumi.Output<string>;
    /**
     * value object
     */
    declare public readonly value: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a ManagedSecretValue resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedSecretValueArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagedSecretValueArgs | ManagedSecretValueState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagedSecretValueState | undefined;
            resourceInputs["encrypted"] = state?.encrypted;
            resourceInputs["publicKey"] = state?.publicKey;
            resourceInputs["value"] = state?.value;
        } else {
            const args = argsOrState as ManagedSecretValueArgs | undefined;
            if (args?.publicKey === undefined && !opts.urn) {
                throw new Error("Missing required property 'publicKey'");
            }
            if (args?.value === undefined && !opts.urn) {
                throw new Error("Missing required property 'value'");
            }
            resourceInputs["publicKey"] = args?.publicKey;
            resourceInputs["value"] = args?.value;
            resourceInputs["encrypted"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagedSecretValue.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ManagedSecretValue resources.
 */
export interface ManagedSecretValueState {
    /**
     * encrypted value
     */
    encrypted?: pulumi.Input<string>;
    /**
     * secret engine's public key used for encryption in PEM format
     */
    publicKey?: pulumi.Input<string>;
    /**
     * value object
     */
    value?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a ManagedSecretValue resource.
 */
export interface ManagedSecretValueArgs {
    /**
     * secret engine's public key used for encryption in PEM format
     */
    publicKey: pulumi.Input<string>;
    /**
     * value object
     */
    value: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
