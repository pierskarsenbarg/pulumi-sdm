// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Sdm
{
    public static class GetPeeringGroupResource
    {
        /// <summary>
        /// PeeringGroupResource represents the attachment between a PeeringGroup and a Resource.
        /// </summary>
        public static Task<GetPeeringGroupResourceResult> InvokeAsync(GetPeeringGroupResourceArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPeeringGroupResourceResult>("sdm:index/getPeeringGroupResource:getPeeringGroupResource", args ?? new GetPeeringGroupResourceArgs(), options.WithDefaults());

        /// <summary>
        /// PeeringGroupResource represents the attachment between a PeeringGroup and a Resource.
        /// </summary>
        public static Output<GetPeeringGroupResourceResult> Invoke(GetPeeringGroupResourceInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPeeringGroupResourceResult>("sdm:index/getPeeringGroupResource:getPeeringGroupResource", args ?? new GetPeeringGroupResourceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// PeeringGroupResource represents the attachment between a PeeringGroup and a Resource.
        /// </summary>
        public static Output<GetPeeringGroupResourceResult> Invoke(GetPeeringGroupResourceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPeeringGroupResourceResult>("sdm:index/getPeeringGroupResource:getPeeringGroupResource", args ?? new GetPeeringGroupResourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPeeringGroupResourceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Peering Group ID to which the resource will be attached to.
        /// </summary>
        [Input("groupId")]
        public string? GroupId { get; set; }

        /// <summary>
        /// Unique identifier of the Attachment.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Resource ID to be attached.
        /// </summary>
        [Input("resourceId")]
        public string? ResourceId { get; set; }

        public GetPeeringGroupResourceArgs()
        {
        }
        public static new GetPeeringGroupResourceArgs Empty => new GetPeeringGroupResourceArgs();
    }

    public sealed class GetPeeringGroupResourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Peering Group ID to which the resource will be attached to.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// Unique identifier of the Attachment.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Resource ID to be attached.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        public GetPeeringGroupResourceInvokeArgs()
        {
        }
        public static new GetPeeringGroupResourceInvokeArgs Empty => new GetPeeringGroupResourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetPeeringGroupResourceResult
    {
        /// <summary>
        /// Peering Group ID to which the resource will be attached to.
        /// </summary>
        public readonly string? GroupId;
        /// <summary>
        /// Unique identifier of the Attachment.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// a list of strings of ids of data sources that match the given arguments.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// A list where each element has the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPeeringGroupResourcePeeringGroupResourceResult> PeeringGroupResources;
        /// <summary>
        /// Resource ID to be attached.
        /// </summary>
        public readonly string? ResourceId;

        [OutputConstructor]
        private GetPeeringGroupResourceResult(
            string? groupId,

            string? id,

            ImmutableArray<string> ids,

            ImmutableArray<Outputs.GetPeeringGroupResourcePeeringGroupResourceResult> peeringGroupResources,

            string? resourceId)
        {
            GroupId = groupId;
            Id = id;
            Ids = ids;
            PeeringGroupResources = peeringGroupResources;
            ResourceId = resourceId;
        }
    }
}
