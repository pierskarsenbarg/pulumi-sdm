// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Sdm.Outputs
{

    [OutputType]
    public sealed class GetRoleRoleResult
    {
        /// <summary>
        /// AccessRules is a list of access rules defining the resources this Role has access to.
        /// </summary>
        public readonly string? AccessRules;
        /// <summary>
        /// Unique identifier of the Role.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Managed By is a read only field for what service manages this role, e.g. StrongDM, Okta, Azure.
        /// </summary>
        public readonly string ManagedBy;
        /// <summary>
        /// Unique human-readable name of the Role.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Tags is a map of key, value pairs.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;

        [OutputConstructor]
        private GetRoleRoleResult(
            string? accessRules,

            string? id,

            string managedBy,

            string? name,

            ImmutableDictionary<string, string>? tags)
        {
            AccessRules = accessRules;
            Id = id;
            ManagedBy = managedBy;
            Name = name;
            Tags = tags;
        }
    }
}
