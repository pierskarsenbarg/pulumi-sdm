// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Sdm.Outputs
{

    [OutputType]
    public sealed class SecretStoreVaultTls
    {
        /// <summary>
        /// A path to a CA file accessible by a Node
        /// </summary>
        public readonly string? CaCertPath;
        /// <summary>
        /// A path to a client certificate file accessible by a Node
        /// </summary>
        public readonly string ClientCertPath;
        /// <summary>
        /// A path to a client key file accessible by a Node
        /// </summary>
        public readonly string ClientKeyPath;
        /// <summary>
        /// Unique human-readable name of the SecretStore.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The namespace to make requests within
        /// </summary>
        public readonly string? Namespace;
        /// <summary>
        /// The URL of the Vault to target
        /// </summary>
        public readonly string ServerAddress;
        /// <summary>
        /// Tags is a map of key, value pairs.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;

        [OutputConstructor]
        private SecretStoreVaultTls(
            string? caCertPath,

            string clientCertPath,

            string clientKeyPath,

            string name,

            string? @namespace,

            string serverAddress,

            ImmutableDictionary<string, string>? tags)
        {
            CaCertPath = caCertPath;
            ClientCertPath = clientCertPath;
            ClientKeyPath = clientKeyPath;
            Name = name;
            Namespace = @namespace;
            ServerAddress = serverAddress;
            Tags = tags;
        }
    }
}
