// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Sdm.Outputs
{

    [OutputType]
    public sealed class GetManagedSecretManagedSecretResult
    {
        /// <summary>
        /// public part of the secret value
        /// </summary>
        public readonly string Config;
        /// <summary>
        /// Timestamp of when secret is going to be rotated
        /// </summary>
        public readonly string ExpiresAt;
        /// <summary>
        /// Unique identifier of the Managed Secret.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Timestamp of when secret was last rotated
        /// </summary>
        public readonly string LastRotatedAt;
        /// <summary>
        /// Unique human-readable name of the Managed Secret.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// An ID of a Secret Engine linked with the Managed Secret.
        /// </summary>
        public readonly string? SecretEngineId;
        /// <summary>
        /// Path in a secret store.
        /// </summary>
        public readonly string SecretStorePath;
        /// <summary>
        /// Tags is a map of key, value pairs.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Sensitive value of the secret.
        /// </summary>
        public readonly string? Value;

        [OutputConstructor]
        private GetManagedSecretManagedSecretResult(
            string config,

            string expiresAt,

            string? id,

            string lastRotatedAt,

            string? name,

            string? secretEngineId,

            string secretStorePath,

            ImmutableDictionary<string, string>? tags,

            string? value)
        {
            Config = config;
            ExpiresAt = expiresAt;
            Id = id;
            LastRotatedAt = lastRotatedAt;
            Name = name;
            SecretEngineId = secretEngineId;
            SecretStorePath = secretStorePath;
            Tags = tags;
            Value = value;
        }
    }
}
