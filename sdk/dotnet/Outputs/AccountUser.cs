// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Sdm.Outputs
{

    [OutputType]
    public sealed class AccountUser
    {
        /// <summary>
        /// The User's email address. Must be unique.
        /// </summary>
        public readonly string Email;
        /// <summary>
        /// External ID is an alternative unique ID this user is represented by within an external service.
        /// </summary>
        public readonly string? ExternalId;
        /// <summary>
        /// The User's first name.
        /// </summary>
        public readonly string FirstName;
        /// <summary>
        /// The User's last name.
        /// </summary>
        public readonly string LastName;
        /// <summary>
        /// Managed By is a read only field for what service manages this user, e.g. StrongDM, Okta, Azure.
        /// </summary>
        public readonly string? ManagedBy;
        /// <summary>
        /// Manager ID is the ID of the user's manager. This field is empty when the user has no manager.
        /// </summary>
        public readonly string? ManagerId;
        /// <summary>
        /// PermissionLevel is the user's permission level e.g. admin, DBA, user.
        /// </summary>
        public readonly string? PermissionLevel;
        /// <summary>
        /// Resolved Manager ID is the ID of the user's manager derived from the manager_id, if present, or from the SCIM metadata. This is a read-only field that's only populated for get and list.
        /// </summary>
        public readonly string? ResolvedManagerId;
        /// <summary>
        /// SCIM contains the raw SCIM metadata for the user. This is a read-only field.
        /// </summary>
        public readonly string? Scim;
        /// <summary>
        /// The Service's suspended state.
        /// </summary>
        public readonly bool? Suspended;
        /// <summary>
        /// Tags is a map of key, value pairs.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;

        [OutputConstructor]
        private AccountUser(
            string email,

            string? externalId,

            string firstName,

            string lastName,

            string? managedBy,

            string? managerId,

            string? permissionLevel,

            string? resolvedManagerId,

            string? scim,

            bool? suspended,

            ImmutableDictionary<string, string>? tags)
        {
            Email = email;
            ExternalId = externalId;
            FirstName = firstName;
            LastName = lastName;
            ManagedBy = managedBy;
            ManagerId = managerId;
            PermissionLevel = permissionLevel;
            ResolvedManagerId = resolvedManagerId;
            Scim = scim;
            Suspended = suspended;
            Tags = tags;
        }
    }
}
