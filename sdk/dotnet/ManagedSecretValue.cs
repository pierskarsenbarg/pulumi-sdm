// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Sdm
{
    [SdmResourceType("sdm:index/managedSecretValue:ManagedSecretValue")]
    public partial class ManagedSecretValue : global::Pulumi.CustomResource
    {
        /// <summary>
        /// encrypted value
        /// </summary>
        [Output("encrypted")]
        public Output<string> Encrypted { get; private set; } = null!;

        /// <summary>
        /// secret engine's public key used for encryption in PEM format
        /// </summary>
        [Output("publicKey")]
        public Output<string> PublicKey { get; private set; } = null!;

        /// <summary>
        /// value object
        /// </summary>
        [Output("value")]
        public Output<ImmutableDictionary<string, string>> Value { get; private set; } = null!;


        /// <summary>
        /// Create a ManagedSecretValue resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ManagedSecretValue(string name, ManagedSecretValueArgs args, CustomResourceOptions? options = null)
            : base("sdm:index/managedSecretValue:ManagedSecretValue", name, args ?? new ManagedSecretValueArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ManagedSecretValue(string name, Input<string> id, ManagedSecretValueState? state = null, CustomResourceOptions? options = null)
            : base("sdm:index/managedSecretValue:ManagedSecretValue", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pierskarsenbarg/pulumi-sdm",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ManagedSecretValue resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ManagedSecretValue Get(string name, Input<string> id, ManagedSecretValueState? state = null, CustomResourceOptions? options = null)
        {
            return new ManagedSecretValue(name, id, state, options);
        }
    }

    public sealed class ManagedSecretValueArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// secret engine's public key used for encryption in PEM format
        /// </summary>
        [Input("publicKey", required: true)]
        public Input<string> PublicKey { get; set; } = null!;

        [Input("value", required: true)]
        private InputMap<string>? _value;

        /// <summary>
        /// value object
        /// </summary>
        public InputMap<string> Value
        {
            get => _value ?? (_value = new InputMap<string>());
            set => _value = value;
        }

        public ManagedSecretValueArgs()
        {
        }
        public static new ManagedSecretValueArgs Empty => new ManagedSecretValueArgs();
    }

    public sealed class ManagedSecretValueState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// encrypted value
        /// </summary>
        [Input("encrypted")]
        public Input<string>? Encrypted { get; set; }

        /// <summary>
        /// secret engine's public key used for encryption in PEM format
        /// </summary>
        [Input("publicKey")]
        public Input<string>? PublicKey { get; set; }

        [Input("value")]
        private InputMap<string>? _value;

        /// <summary>
        /// value object
        /// </summary>
        public InputMap<string> Value
        {
            get => _value ?? (_value = new InputMap<string>());
            set => _value = value;
        }

        public ManagedSecretValueState()
        {
        }
        public static new ManagedSecretValueState Empty => new ManagedSecretValueState();
    }
}
