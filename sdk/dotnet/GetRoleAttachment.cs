// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Sdm
{
    public static class GetRoleAttachment
    {
        /// <summary>
        /// A RoleAttachment assigns a role to a composite role.
        ///  
        ///  Deprecated: use multi-role via AccountAttachments instead.
        /// This data source is deprecated.
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Sdm = Pulumi.Sdm;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var roleAttachmentQuery = Output.Create(Sdm.GetRoleAttachment.InvokeAsync(new Sdm.GetRoleAttachmentArgs
        ///         {
        ///             CompositeRoleId = "r-233332245",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetRoleAttachmentResult> InvokeAsync(GetRoleAttachmentArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRoleAttachmentResult>("sdm:index/getRoleAttachment:getRoleAttachment", args ?? new GetRoleAttachmentArgs(), options.WithDefaults());

        /// <summary>
        /// A RoleAttachment assigns a role to a composite role.
        ///  
        ///  Deprecated: use multi-role via AccountAttachments instead.
        /// This data source is deprecated.
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Sdm = Pulumi.Sdm;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var roleAttachmentQuery = Output.Create(Sdm.GetRoleAttachment.InvokeAsync(new Sdm.GetRoleAttachmentArgs
        ///         {
        ///             CompositeRoleId = "r-233332245",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetRoleAttachmentResult> Invoke(GetRoleAttachmentInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetRoleAttachmentResult>("sdm:index/getRoleAttachment:getRoleAttachment", args ?? new GetRoleAttachmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRoleAttachmentArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the attached role of this RoleAttachment.
        /// </summary>
        [Input("attachedRoleId")]
        public string? AttachedRoleId { get; set; }

        /// <summary>
        /// The id of the composite role of this RoleAttachment.
        /// </summary>
        [Input("compositeRoleId")]
        public string? CompositeRoleId { get; set; }

        /// <summary>
        /// Unique identifier of the RoleAttachment.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        public GetRoleAttachmentArgs()
        {
        }
    }

    public sealed class GetRoleAttachmentInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the attached role of this RoleAttachment.
        /// </summary>
        [Input("attachedRoleId")]
        public Input<string>? AttachedRoleId { get; set; }

        /// <summary>
        /// The id of the composite role of this RoleAttachment.
        /// </summary>
        [Input("compositeRoleId")]
        public Input<string>? CompositeRoleId { get; set; }

        /// <summary>
        /// Unique identifier of the RoleAttachment.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        public GetRoleAttachmentInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRoleAttachmentResult
    {
        /// <summary>
        /// The id of the attached role of this RoleAttachment.
        /// </summary>
        public readonly string? AttachedRoleId;
        /// <summary>
        /// The id of the composite role of this RoleAttachment.
        /// </summary>
        public readonly string? CompositeRoleId;
        /// <summary>
        /// Unique identifier of the RoleAttachment.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// a list of strings of ids of data sources that match the given arguments.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// A list where each element has the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRoleAttachmentRoleAttachmentResult> RoleAttachments;

        [OutputConstructor]
        private GetRoleAttachmentResult(
            string? attachedRoleId,

            string? compositeRoleId,

            string? id,

            ImmutableArray<string> ids,

            ImmutableArray<Outputs.GetRoleAttachmentRoleAttachmentResult> roleAttachments)
        {
            AttachedRoleId = attachedRoleId;
            CompositeRoleId = compositeRoleId;
            Id = id;
            Ids = ids;
            RoleAttachments = roleAttachments;
        }
    }
}
