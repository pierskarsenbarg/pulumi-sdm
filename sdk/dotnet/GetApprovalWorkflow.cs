// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Sdm
{
    public static class GetApprovalWorkflow
    {
        /// <summary>
        /// ApprovalWorkflows are the mechanism by which requests for access can be viewed by authorized
        ///  approvers and be approved or denied.
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdm = Pulumi.Sdm;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var manualApprovalWorkflowQuery = Sdm.GetApprovalWorkflow.Invoke(new()
        ///     {
        ///         ApprovalMode = "manual",
        ///         Name = "approval workflow manual",
        ///     });
        /// 
        ///     var autoGrantApprovalWorkflowQuery = Sdm.GetApprovalWorkflow.Invoke(new()
        ///     {
        ///         ApprovalMode = "automatic",
        ///         Name = "approval workflow auto",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetApprovalWorkflowResult> InvokeAsync(GetApprovalWorkflowArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApprovalWorkflowResult>("sdm:index/getApprovalWorkflow:getApprovalWorkflow", args ?? new GetApprovalWorkflowArgs(), options.WithDefaults());

        /// <summary>
        /// ApprovalWorkflows are the mechanism by which requests for access can be viewed by authorized
        ///  approvers and be approved or denied.
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdm = Pulumi.Sdm;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var manualApprovalWorkflowQuery = Sdm.GetApprovalWorkflow.Invoke(new()
        ///     {
        ///         ApprovalMode = "manual",
        ///         Name = "approval workflow manual",
        ///     });
        /// 
        ///     var autoGrantApprovalWorkflowQuery = Sdm.GetApprovalWorkflow.Invoke(new()
        ///     {
        ///         ApprovalMode = "automatic",
        ///         Name = "approval workflow auto",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApprovalWorkflowResult> Invoke(GetApprovalWorkflowInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApprovalWorkflowResult>("sdm:index/getApprovalWorkflow:getApprovalWorkflow", args ?? new GetApprovalWorkflowInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ApprovalWorkflows are the mechanism by which requests for access can be viewed by authorized
        ///  approvers and be approved or denied.
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdm = Pulumi.Sdm;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var manualApprovalWorkflowQuery = Sdm.GetApprovalWorkflow.Invoke(new()
        ///     {
        ///         ApprovalMode = "manual",
        ///         Name = "approval workflow manual",
        ///     });
        /// 
        ///     var autoGrantApprovalWorkflowQuery = Sdm.GetApprovalWorkflow.Invoke(new()
        ///     {
        ///         ApprovalMode = "automatic",
        ///         Name = "approval workflow auto",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApprovalWorkflowResult> Invoke(GetApprovalWorkflowInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetApprovalWorkflowResult>("sdm:index/getApprovalWorkflow:getApprovalWorkflow", args ?? new GetApprovalWorkflowInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApprovalWorkflowArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Approval mode of the ApprovalWorkflow
        /// </summary>
        [Input("approvalMode")]
        public string? ApprovalMode { get; set; }

        [Input("approvalSteps")]
        private List<Inputs.GetApprovalWorkflowApprovalStepArgs>? _approvalSteps;

        /// <summary>
        /// The approval steps of this approval workflow
        /// </summary>
        public List<Inputs.GetApprovalWorkflowApprovalStepArgs> ApprovalSteps
        {
            get => _approvalSteps ?? (_approvalSteps = new List<Inputs.GetApprovalWorkflowApprovalStepArgs>());
            set => _approvalSteps = value;
        }

        /// <summary>
        /// Optional description of the ApprovalWorkflow.
        /// </summary>
        [Input("description")]
        public string? Description { get; set; }

        /// <summary>
        /// Unique identifier of the ApprovalWorkflow.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Unique human-readable name of the ApprovalWorkflow.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetApprovalWorkflowArgs()
        {
        }
        public static new GetApprovalWorkflowArgs Empty => new GetApprovalWorkflowArgs();
    }

    public sealed class GetApprovalWorkflowInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Approval mode of the ApprovalWorkflow
        /// </summary>
        [Input("approvalMode")]
        public Input<string>? ApprovalMode { get; set; }

        [Input("approvalSteps")]
        private InputList<Inputs.GetApprovalWorkflowApprovalStepInputArgs>? _approvalSteps;

        /// <summary>
        /// The approval steps of this approval workflow
        /// </summary>
        public InputList<Inputs.GetApprovalWorkflowApprovalStepInputArgs> ApprovalSteps
        {
            get => _approvalSteps ?? (_approvalSteps = new InputList<Inputs.GetApprovalWorkflowApprovalStepInputArgs>());
            set => _approvalSteps = value;
        }

        /// <summary>
        /// Optional description of the ApprovalWorkflow.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Unique identifier of the ApprovalWorkflow.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Unique human-readable name of the ApprovalWorkflow.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetApprovalWorkflowInvokeArgs()
        {
        }
        public static new GetApprovalWorkflowInvokeArgs Empty => new GetApprovalWorkflowInvokeArgs();
    }


    [OutputType]
    public sealed class GetApprovalWorkflowResult
    {
        /// <summary>
        /// Approval mode of the ApprovalWorkflow
        /// </summary>
        public readonly string? ApprovalMode;
        /// <summary>
        /// The approval steps of this approval workflow
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApprovalWorkflowApprovalStepResult> ApprovalSteps;
        /// <summary>
        /// A list where each element has the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApprovalWorkflowApprovalWorkflowResult> ApprovalWorkflows;
        /// <summary>
        /// Optional description of the ApprovalWorkflow.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Unique identifier of the ApprovalWorkflow.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// a list of strings of ids of data sources that match the given arguments.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// Unique human-readable name of the ApprovalWorkflow.
        /// </summary>
        public readonly string? Name;

        [OutputConstructor]
        private GetApprovalWorkflowResult(
            string? approvalMode,

            ImmutableArray<Outputs.GetApprovalWorkflowApprovalStepResult> approvalSteps,

            ImmutableArray<Outputs.GetApprovalWorkflowApprovalWorkflowResult> approvalWorkflows,

            string? description,

            string? id,

            ImmutableArray<string> ids,

            string? name)
        {
            ApprovalMode = approvalMode;
            ApprovalSteps = approvalSteps;
            ApprovalWorkflows = approvalWorkflows;
            Description = description;
            Id = id;
            Ids = ids;
            Name = name;
        }
    }
}
