// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Sdm
{
    public static class GetAccountGrant
    {
        /// <summary>
        /// AccountGrants connect a resource directly to an account, giving the account the permission to connect to that resource.
        /// This data source is deprecated.
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Sdm = Pulumi.Sdm;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var accountGrantQuery = Output.Create(Sdm.GetAccountGrant.InvokeAsync(new Sdm.GetAccountGrantArgs
        ///         {
        ///             AccountId = "a-00000054",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAccountGrantResult> InvokeAsync(GetAccountGrantArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAccountGrantResult>("sdm:index/getAccountGrant:getAccountGrant", args ?? new GetAccountGrantArgs(), options.WithDefaults());

        /// <summary>
        /// AccountGrants connect a resource directly to an account, giving the account the permission to connect to that resource.
        /// This data source is deprecated.
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Sdm = Pulumi.Sdm;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var accountGrantQuery = Output.Create(Sdm.GetAccountGrant.InvokeAsync(new Sdm.GetAccountGrantArgs
        ///         {
        ///             AccountId = "a-00000054",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAccountGrantResult> Invoke(GetAccountGrantInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAccountGrantResult>("sdm:index/getAccountGrant:getAccountGrant", args ?? new GetAccountGrantInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccountGrantArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The account id of this AccountGrant.
        /// </summary>
        [Input("accountId")]
        public string? AccountId { get; set; }

        /// <summary>
        /// Unique identifier of the AccountGrant.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The resource id of this AccountGrant.
        /// </summary>
        [Input("resourceId")]
        public string? ResourceId { get; set; }

        public GetAccountGrantArgs()
        {
        }
    }

    public sealed class GetAccountGrantInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The account id of this AccountGrant.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Unique identifier of the AccountGrant.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The resource id of this AccountGrant.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        public GetAccountGrantInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAccountGrantResult
    {
        /// <summary>
        /// A list where each element has the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAccountGrantAccountGrantResult> AccountGrants;
        /// <summary>
        /// The account id of this AccountGrant.
        /// </summary>
        public readonly string? AccountId;
        /// <summary>
        /// Unique identifier of the AccountGrant.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// a list of strings of ids of data sources that match the given arguments.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// The resource id of this AccountGrant.
        /// </summary>
        public readonly string? ResourceId;

        [OutputConstructor]
        private GetAccountGrantResult(
            ImmutableArray<Outputs.GetAccountGrantAccountGrantResult> accountGrants,

            string? accountId,

            string? id,

            ImmutableArray<string> ids,

            string? resourceId)
        {
            AccountGrants = accountGrants;
            AccountId = accountId;
            Id = id;
            Ids = ids;
            ResourceId = resourceId;
        }
    }
}
