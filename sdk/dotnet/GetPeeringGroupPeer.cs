// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Sdm
{
    public static class GetPeeringGroupPeer
    {
        /// <summary>
        /// PeeringGroupPeer represents the link between two PeeringGroups
        /// </summary>
        public static Task<GetPeeringGroupPeerResult> InvokeAsync(GetPeeringGroupPeerArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPeeringGroupPeerResult>("sdm:index/getPeeringGroupPeer:getPeeringGroupPeer", args ?? new GetPeeringGroupPeerArgs(), options.WithDefaults());

        /// <summary>
        /// PeeringGroupPeer represents the link between two PeeringGroups
        /// </summary>
        public static Output<GetPeeringGroupPeerResult> Invoke(GetPeeringGroupPeerInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPeeringGroupPeerResult>("sdm:index/getPeeringGroupPeer:getPeeringGroupPeer", args ?? new GetPeeringGroupPeerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPeeringGroupPeerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Group ID from which the link will originate.
        /// </summary>
        [Input("groupId")]
        public string? GroupId { get; set; }

        /// <summary>
        /// Unique identifier of the Attachment.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Peering Group ID to which Group ID will link.
        /// </summary>
        [Input("peersWithGroupId")]
        public string? PeersWithGroupId { get; set; }

        public GetPeeringGroupPeerArgs()
        {
        }
        public static new GetPeeringGroupPeerArgs Empty => new GetPeeringGroupPeerArgs();
    }

    public sealed class GetPeeringGroupPeerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Group ID from which the link will originate.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// Unique identifier of the Attachment.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Peering Group ID to which Group ID will link.
        /// </summary>
        [Input("peersWithGroupId")]
        public Input<string>? PeersWithGroupId { get; set; }

        public GetPeeringGroupPeerInvokeArgs()
        {
        }
        public static new GetPeeringGroupPeerInvokeArgs Empty => new GetPeeringGroupPeerInvokeArgs();
    }


    [OutputType]
    public sealed class GetPeeringGroupPeerResult
    {
        /// <summary>
        /// Group ID from which the link will originate.
        /// </summary>
        public readonly string? GroupId;
        /// <summary>
        /// Unique identifier of the Attachment.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// a list of strings of ids of data sources that match the given arguments.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// A list where each element has the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPeeringGroupPeerPeeringGroupPeerResult> PeeringGroupPeers;
        /// <summary>
        /// Peering Group ID to which Group ID will link.
        /// </summary>
        public readonly string? PeersWithGroupId;

        [OutputConstructor]
        private GetPeeringGroupPeerResult(
            string? groupId,

            string? id,

            ImmutableArray<string> ids,

            ImmutableArray<Outputs.GetPeeringGroupPeerPeeringGroupPeerResult> peeringGroupPeers,

            string? peersWithGroupId)
        {
            GroupId = groupId;
            Id = id;
            Ids = ids;
            PeeringGroupPeers = peeringGroupPeers;
            PeersWithGroupId = peersWithGroupId;
        }
    }
}
